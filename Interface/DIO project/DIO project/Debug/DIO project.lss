
DIO project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000512  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000512  00000586  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000588  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000c54  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000000a0  00000000  00000000  00000ce0  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000066b  00000000  00000000  00000d80  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001ea  00000000  00000000  000013eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000484  00000000  00000000  000015d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b8  00000000  00000000  00001a5c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001a4  00000000  00000000  00001b14  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000339  00000000  00000000  00001cb8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e1       	ldi	r30, 0x12	; 18
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 87 02 	jmp	0x50e	; 0x50e <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include "std_macros.h"
#include "DIO_driver.h"

int main(void)
{
	DIO_vset_portdir('a',0xff);
  92:	81 e6       	ldi	r24, 0x61	; 97
  94:	6f ef       	ldi	r22, 0xFF	; 255
  96:	0e 94 03 02 	call	0x406	; 0x406 <DIO_vset_portdir>
    while(1)
    {
		 DIO_vtoggle('a',0);
  9a:	81 e6       	ldi	r24, 0x61	; 97
  9c:	60 e0       	ldi	r22, 0x00	; 0
  9e:	0e 94 b6 01 	call	0x36c	; 0x36c <DIO_vtoggle>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a2:	8f ef       	ldi	r24, 0xFF	; 255
  a4:	90 e7       	ldi	r25, 0x70	; 112
  a6:	a2 e0       	ldi	r26, 0x02	; 2
  a8:	81 50       	subi	r24, 0x01	; 1
  aa:	90 40       	sbci	r25, 0x00	; 0
  ac:	a0 40       	sbci	r26, 0x00	; 0
  ae:	e1 f7       	brne	.-8      	; 0xa8 <main+0x16>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <main+0x20>
  b2:	00 00       	nop
		 _delay_ms(100);
		 DIO_vtoggle('a',1);
  b4:	81 e6       	ldi	r24, 0x61	; 97
  b6:	61 e0       	ldi	r22, 0x01	; 1
  b8:	0e 94 b6 01 	call	0x36c	; 0x36c <DIO_vtoggle>
  bc:	8f ef       	ldi	r24, 0xFF	; 255
  be:	90 e7       	ldi	r25, 0x70	; 112
  c0:	a2 e0       	ldi	r26, 0x02	; 2
  c2:	81 50       	subi	r24, 0x01	; 1
  c4:	90 40       	sbci	r25, 0x00	; 0
  c6:	a0 40       	sbci	r26, 0x00	; 0
  c8:	e1 f7       	brne	.-8      	; 0xc2 <main+0x30>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <main+0x3a>
  cc:	00 00       	nop
		 _delay_ms(100);
		 DIO_vtoggle('a',2);
  ce:	81 e6       	ldi	r24, 0x61	; 97
  d0:	62 e0       	ldi	r22, 0x02	; 2
  d2:	0e 94 b6 01 	call	0x36c	; 0x36c <DIO_vtoggle>
  d6:	8f ef       	ldi	r24, 0xFF	; 255
  d8:	90 e7       	ldi	r25, 0x70	; 112
  da:	a2 e0       	ldi	r26, 0x02	; 2
  dc:	81 50       	subi	r24, 0x01	; 1
  de:	90 40       	sbci	r25, 0x00	; 0
  e0:	a0 40       	sbci	r26, 0x00	; 0
  e2:	e1 f7       	brne	.-8      	; 0xdc <main+0x4a>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <main+0x54>
  e6:	00 00       	nop
  e8:	d8 cf       	rjmp	.-80     	; 0x9a <main+0x8>

000000ea <DIO_vset_pindir>:
#define F_CPU 8000000UL
#include <util/delay.h>
#include "std_macros.h"
void DIO_vset_pindir(unsigned char port,unsigned char pin,unsigned char dir)
{
switch(port)
  ea:	84 34       	cpi	r24, 0x44	; 68
  ec:	09 f4       	brne	.+2      	; 0xf0 <DIO_vset_pindir+0x6>
  ee:	71 c0       	rjmp	.+226    	; 0x1d2 <DIO_vset_pindir+0xe8>
  f0:	85 34       	cpi	r24, 0x45	; 69
  f2:	48 f4       	brcc	.+18     	; 0x106 <DIO_vset_pindir+0x1c>
  f4:	82 34       	cpi	r24, 0x42	; 66
  f6:	99 f1       	breq	.+102    	; 0x15e <DIO_vset_pindir+0x74>
  f8:	83 34       	cpi	r24, 0x43	; 67
  fa:	08 f0       	brcs	.+2      	; 0xfe <DIO_vset_pindir+0x14>
  fc:	4d c0       	rjmp	.+154    	; 0x198 <DIO_vset_pindir+0xae>
  fe:	81 34       	cpi	r24, 0x41	; 65
 100:	09 f0       	breq	.+2      	; 0x104 <DIO_vset_pindir+0x1a>
 102:	83 c0       	rjmp	.+262    	; 0x20a <DIO_vset_pindir+0x120>
 104:	0f c0       	rjmp	.+30     	; 0x124 <DIO_vset_pindir+0x3a>
 106:	82 36       	cpi	r24, 0x62	; 98
 108:	51 f1       	breq	.+84     	; 0x15e <DIO_vset_pindir+0x74>
 10a:	83 36       	cpi	r24, 0x63	; 99
 10c:	20 f4       	brcc	.+8      	; 0x116 <DIO_vset_pindir+0x2c>
 10e:	81 36       	cpi	r24, 0x61	; 97
 110:	09 f0       	breq	.+2      	; 0x114 <DIO_vset_pindir+0x2a>
 112:	7b c0       	rjmp	.+246    	; 0x20a <DIO_vset_pindir+0x120>
 114:	07 c0       	rjmp	.+14     	; 0x124 <DIO_vset_pindir+0x3a>
 116:	83 36       	cpi	r24, 0x63	; 99
 118:	09 f4       	brne	.+2      	; 0x11c <DIO_vset_pindir+0x32>
 11a:	3e c0       	rjmp	.+124    	; 0x198 <DIO_vset_pindir+0xae>
 11c:	84 36       	cpi	r24, 0x64	; 100
 11e:	09 f0       	breq	.+2      	; 0x122 <DIO_vset_pindir+0x38>
 120:	74 c0       	rjmp	.+232    	; 0x20a <DIO_vset_pindir+0x120>
 122:	57 c0       	rjmp	.+174    	; 0x1d2 <DIO_vset_pindir+0xe8>
{
	case 'A':
	case 'a':
	if(dir==1)
 124:	41 30       	cpi	r20, 0x01	; 1
 126:	69 f4       	brne	.+26     	; 0x142 <DIO_vset_pindir+0x58>
	{
		SET_BIT(DDRA,pin);
 128:	2a b3       	in	r18, 0x1a	; 26
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	90 e0       	ldi	r25, 0x00	; 0
 12e:	ac 01       	movw	r20, r24
 130:	02 c0       	rjmp	.+4      	; 0x136 <DIO_vset_pindir+0x4c>
 132:	44 0f       	add	r20, r20
 134:	55 1f       	adc	r21, r21
 136:	6a 95       	dec	r22
 138:	e2 f7       	brpl	.-8      	; 0x132 <DIO_vset_pindir+0x48>
 13a:	ba 01       	movw	r22, r20
 13c:	62 2b       	or	r22, r18
 13e:	6a bb       	out	0x1a, r22	; 26
 140:	08 95       	ret
	} 
	else
	{
		CLR_BIT(DDRA,pin);
 142:	2a b3       	in	r18, 0x1a	; 26
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	ac 01       	movw	r20, r24
 14a:	02 c0       	rjmp	.+4      	; 0x150 <DIO_vset_pindir+0x66>
 14c:	44 0f       	add	r20, r20
 14e:	55 1f       	adc	r21, r21
 150:	6a 95       	dec	r22
 152:	e2 f7       	brpl	.-8      	; 0x14c <DIO_vset_pindir+0x62>
 154:	ba 01       	movw	r22, r20
 156:	60 95       	com	r22
 158:	62 23       	and	r22, r18
 15a:	6a bb       	out	0x1a, r22	; 26
 15c:	08 95       	ret
	}
	break;
	case 'B':
	case 'b':
	if(dir==1)
 15e:	41 30       	cpi	r20, 0x01	; 1
 160:	69 f4       	brne	.+26     	; 0x17c <DIO_vset_pindir+0x92>
	{
		SET_BIT(DDRB,pin);
 162:	27 b3       	in	r18, 0x17	; 23
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	ac 01       	movw	r20, r24
 16a:	02 c0       	rjmp	.+4      	; 0x170 <DIO_vset_pindir+0x86>
 16c:	44 0f       	add	r20, r20
 16e:	55 1f       	adc	r21, r21
 170:	6a 95       	dec	r22
 172:	e2 f7       	brpl	.-8      	; 0x16c <DIO_vset_pindir+0x82>
 174:	ba 01       	movw	r22, r20
 176:	62 2b       	or	r22, r18
 178:	67 bb       	out	0x17, r22	; 23
 17a:	08 95       	ret
	}
	else
	{
		CLR_BIT(DDRB,pin);
 17c:	27 b3       	in	r18, 0x17	; 23
 17e:	81 e0       	ldi	r24, 0x01	; 1
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	ac 01       	movw	r20, r24
 184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_vset_pindir+0xa0>
 186:	44 0f       	add	r20, r20
 188:	55 1f       	adc	r21, r21
 18a:	6a 95       	dec	r22
 18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_vset_pindir+0x9c>
 18e:	ba 01       	movw	r22, r20
 190:	60 95       	com	r22
 192:	62 23       	and	r22, r18
 194:	67 bb       	out	0x17, r22	; 23
 196:	08 95       	ret
	}
	break;
	case 'C':
	case 'c':
	if(dir==1)
 198:	41 30       	cpi	r20, 0x01	; 1
 19a:	69 f4       	brne	.+26     	; 0x1b6 <DIO_vset_pindir+0xcc>
	{
		SET_BIT(DDRC,pin);
 19c:	24 b3       	in	r18, 0x14	; 20
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	ac 01       	movw	r20, r24
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <DIO_vset_pindir+0xc0>
 1a6:	44 0f       	add	r20, r20
 1a8:	55 1f       	adc	r21, r21
 1aa:	6a 95       	dec	r22
 1ac:	e2 f7       	brpl	.-8      	; 0x1a6 <DIO_vset_pindir+0xbc>
 1ae:	ba 01       	movw	r22, r20
 1b0:	62 2b       	or	r22, r18
 1b2:	64 bb       	out	0x14, r22	; 20
 1b4:	08 95       	ret
	}
	else
	{
		CLR_BIT(DDRC,pin);
 1b6:	24 b3       	in	r18, 0x14	; 20
 1b8:	81 e0       	ldi	r24, 0x01	; 1
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	ac 01       	movw	r20, r24
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <DIO_vset_pindir+0xda>
 1c0:	44 0f       	add	r20, r20
 1c2:	55 1f       	adc	r21, r21
 1c4:	6a 95       	dec	r22
 1c6:	e2 f7       	brpl	.-8      	; 0x1c0 <DIO_vset_pindir+0xd6>
 1c8:	ba 01       	movw	r22, r20
 1ca:	60 95       	com	r22
 1cc:	62 23       	and	r22, r18
 1ce:	64 bb       	out	0x14, r22	; 20
 1d0:	08 95       	ret
	}
	break;
	case 'D':
	case 'd':
	if(dir==1)
 1d2:	41 30       	cpi	r20, 0x01	; 1
 1d4:	69 f4       	brne	.+26     	; 0x1f0 <DIO_vset_pindir+0x106>
	{
		SET_BIT(DDRD,pin);
 1d6:	21 b3       	in	r18, 0x11	; 17
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	ac 01       	movw	r20, r24
 1de:	02 c0       	rjmp	.+4      	; 0x1e4 <DIO_vset_pindir+0xfa>
 1e0:	44 0f       	add	r20, r20
 1e2:	55 1f       	adc	r21, r21
 1e4:	6a 95       	dec	r22
 1e6:	e2 f7       	brpl	.-8      	; 0x1e0 <DIO_vset_pindir+0xf6>
 1e8:	ba 01       	movw	r22, r20
 1ea:	62 2b       	or	r22, r18
 1ec:	61 bb       	out	0x11, r22	; 17
 1ee:	08 95       	ret
	}
	else
	{
		CLR_BIT(DDRD,pin);
 1f0:	21 b3       	in	r18, 0x11	; 17
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	ac 01       	movw	r20, r24
 1f8:	02 c0       	rjmp	.+4      	; 0x1fe <DIO_vset_pindir+0x114>
 1fa:	44 0f       	add	r20, r20
 1fc:	55 1f       	adc	r21, r21
 1fe:	6a 95       	dec	r22
 200:	e2 f7       	brpl	.-8      	; 0x1fa <DIO_vset_pindir+0x110>
 202:	ba 01       	movw	r22, r20
 204:	60 95       	com	r22
 206:	62 23       	and	r22, r18
 208:	61 bb       	out	0x11, r22	; 17
 20a:	08 95       	ret

0000020c <DIO_vwrite_pin>:
	}
	break;
}}
void DIO_vwrite_pin(unsigned char port,unsigned char pin,unsigned char val)
{
	switch(port)
 20c:	84 34       	cpi	r24, 0x44	; 68
 20e:	09 f4       	brne	.+2      	; 0x212 <DIO_vwrite_pin+0x6>
 210:	71 c0       	rjmp	.+226    	; 0x2f4 <DIO_vwrite_pin+0xe8>
 212:	85 34       	cpi	r24, 0x45	; 69
 214:	48 f4       	brcc	.+18     	; 0x228 <DIO_vwrite_pin+0x1c>
 216:	82 34       	cpi	r24, 0x42	; 66
 218:	99 f1       	breq	.+102    	; 0x280 <DIO_vwrite_pin+0x74>
 21a:	83 34       	cpi	r24, 0x43	; 67
 21c:	08 f0       	brcs	.+2      	; 0x220 <DIO_vwrite_pin+0x14>
 21e:	4d c0       	rjmp	.+154    	; 0x2ba <DIO_vwrite_pin+0xae>
 220:	81 34       	cpi	r24, 0x41	; 65
 222:	09 f0       	breq	.+2      	; 0x226 <DIO_vwrite_pin+0x1a>
 224:	83 c0       	rjmp	.+262    	; 0x32c <DIO_vwrite_pin+0x120>
 226:	0f c0       	rjmp	.+30     	; 0x246 <DIO_vwrite_pin+0x3a>
 228:	82 36       	cpi	r24, 0x62	; 98
 22a:	51 f1       	breq	.+84     	; 0x280 <DIO_vwrite_pin+0x74>
 22c:	83 36       	cpi	r24, 0x63	; 99
 22e:	20 f4       	brcc	.+8      	; 0x238 <DIO_vwrite_pin+0x2c>
 230:	81 36       	cpi	r24, 0x61	; 97
 232:	09 f0       	breq	.+2      	; 0x236 <DIO_vwrite_pin+0x2a>
 234:	7b c0       	rjmp	.+246    	; 0x32c <DIO_vwrite_pin+0x120>
 236:	07 c0       	rjmp	.+14     	; 0x246 <DIO_vwrite_pin+0x3a>
 238:	83 36       	cpi	r24, 0x63	; 99
 23a:	09 f4       	brne	.+2      	; 0x23e <DIO_vwrite_pin+0x32>
 23c:	3e c0       	rjmp	.+124    	; 0x2ba <DIO_vwrite_pin+0xae>
 23e:	84 36       	cpi	r24, 0x64	; 100
 240:	09 f0       	breq	.+2      	; 0x244 <DIO_vwrite_pin+0x38>
 242:	74 c0       	rjmp	.+232    	; 0x32c <DIO_vwrite_pin+0x120>
 244:	57 c0       	rjmp	.+174    	; 0x2f4 <DIO_vwrite_pin+0xe8>
	{
		case 'A':
		case 'a':
		if(val==1)
 246:	41 30       	cpi	r20, 0x01	; 1
 248:	69 f4       	brne	.+26     	; 0x264 <DIO_vwrite_pin+0x58>
		{
			SET_BIT(PORTA,pin);
 24a:	2b b3       	in	r18, 0x1b	; 27
 24c:	81 e0       	ldi	r24, 0x01	; 1
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	ac 01       	movw	r20, r24
 252:	02 c0       	rjmp	.+4      	; 0x258 <DIO_vwrite_pin+0x4c>
 254:	44 0f       	add	r20, r20
 256:	55 1f       	adc	r21, r21
 258:	6a 95       	dec	r22
 25a:	e2 f7       	brpl	.-8      	; 0x254 <DIO_vwrite_pin+0x48>
 25c:	ba 01       	movw	r22, r20
 25e:	62 2b       	or	r22, r18
 260:	6b bb       	out	0x1b, r22	; 27
 262:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTA,pin);
 264:	2b b3       	in	r18, 0x1b	; 27
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	ac 01       	movw	r20, r24
 26c:	02 c0       	rjmp	.+4      	; 0x272 <DIO_vwrite_pin+0x66>
 26e:	44 0f       	add	r20, r20
 270:	55 1f       	adc	r21, r21
 272:	6a 95       	dec	r22
 274:	e2 f7       	brpl	.-8      	; 0x26e <DIO_vwrite_pin+0x62>
 276:	ba 01       	movw	r22, r20
 278:	60 95       	com	r22
 27a:	62 23       	and	r22, r18
 27c:	6b bb       	out	0x1b, r22	; 27
 27e:	08 95       	ret
		}
		break;
		case 'B':
		case 'b':
		if(val==1)
 280:	41 30       	cpi	r20, 0x01	; 1
 282:	69 f4       	brne	.+26     	; 0x29e <DIO_vwrite_pin+0x92>
		{
			SET_BIT(PORTB,pin);
 284:	28 b3       	in	r18, 0x18	; 24
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	ac 01       	movw	r20, r24
 28c:	02 c0       	rjmp	.+4      	; 0x292 <DIO_vwrite_pin+0x86>
 28e:	44 0f       	add	r20, r20
 290:	55 1f       	adc	r21, r21
 292:	6a 95       	dec	r22
 294:	e2 f7       	brpl	.-8      	; 0x28e <DIO_vwrite_pin+0x82>
 296:	ba 01       	movw	r22, r20
 298:	62 2b       	or	r22, r18
 29a:	68 bb       	out	0x18, r22	; 24
 29c:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTB,pin);
 29e:	28 b3       	in	r18, 0x18	; 24
 2a0:	81 e0       	ldi	r24, 0x01	; 1
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	ac 01       	movw	r20, r24
 2a6:	02 c0       	rjmp	.+4      	; 0x2ac <DIO_vwrite_pin+0xa0>
 2a8:	44 0f       	add	r20, r20
 2aa:	55 1f       	adc	r21, r21
 2ac:	6a 95       	dec	r22
 2ae:	e2 f7       	brpl	.-8      	; 0x2a8 <DIO_vwrite_pin+0x9c>
 2b0:	ba 01       	movw	r22, r20
 2b2:	60 95       	com	r22
 2b4:	62 23       	and	r22, r18
 2b6:	68 bb       	out	0x18, r22	; 24
 2b8:	08 95       	ret
		}
		break;
		case 'C':
		case 'c':
		if(val==1)
 2ba:	41 30       	cpi	r20, 0x01	; 1
 2bc:	69 f4       	brne	.+26     	; 0x2d8 <DIO_vwrite_pin+0xcc>
		{
			SET_BIT(PORTC,pin);
 2be:	25 b3       	in	r18, 0x15	; 21
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	ac 01       	movw	r20, r24
 2c6:	02 c0       	rjmp	.+4      	; 0x2cc <DIO_vwrite_pin+0xc0>
 2c8:	44 0f       	add	r20, r20
 2ca:	55 1f       	adc	r21, r21
 2cc:	6a 95       	dec	r22
 2ce:	e2 f7       	brpl	.-8      	; 0x2c8 <DIO_vwrite_pin+0xbc>
 2d0:	ba 01       	movw	r22, r20
 2d2:	62 2b       	or	r22, r18
 2d4:	65 bb       	out	0x15, r22	; 21
 2d6:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTC,pin);
 2d8:	25 b3       	in	r18, 0x15	; 21
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	ac 01       	movw	r20, r24
 2e0:	02 c0       	rjmp	.+4      	; 0x2e6 <DIO_vwrite_pin+0xda>
 2e2:	44 0f       	add	r20, r20
 2e4:	55 1f       	adc	r21, r21
 2e6:	6a 95       	dec	r22
 2e8:	e2 f7       	brpl	.-8      	; 0x2e2 <DIO_vwrite_pin+0xd6>
 2ea:	ba 01       	movw	r22, r20
 2ec:	60 95       	com	r22
 2ee:	62 23       	and	r22, r18
 2f0:	65 bb       	out	0x15, r22	; 21
 2f2:	08 95       	ret
		}
		break;
		case 'D':
		case 'd':
		if(val==1)
 2f4:	41 30       	cpi	r20, 0x01	; 1
 2f6:	69 f4       	brne	.+26     	; 0x312 <DIO_vwrite_pin+0x106>
		{
			SET_BIT(PORTD,pin);
 2f8:	22 b3       	in	r18, 0x12	; 18
 2fa:	81 e0       	ldi	r24, 0x01	; 1
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	ac 01       	movw	r20, r24
 300:	02 c0       	rjmp	.+4      	; 0x306 <DIO_vwrite_pin+0xfa>
 302:	44 0f       	add	r20, r20
 304:	55 1f       	adc	r21, r21
 306:	6a 95       	dec	r22
 308:	e2 f7       	brpl	.-8      	; 0x302 <DIO_vwrite_pin+0xf6>
 30a:	ba 01       	movw	r22, r20
 30c:	62 2b       	or	r22, r18
 30e:	62 bb       	out	0x12, r22	; 18
 310:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTD,pin);
 312:	22 b3       	in	r18, 0x12	; 18
 314:	81 e0       	ldi	r24, 0x01	; 1
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	ac 01       	movw	r20, r24
 31a:	02 c0       	rjmp	.+4      	; 0x320 <DIO_vwrite_pin+0x114>
 31c:	44 0f       	add	r20, r20
 31e:	55 1f       	adc	r21, r21
 320:	6a 95       	dec	r22
 322:	e2 f7       	brpl	.-8      	; 0x31c <DIO_vwrite_pin+0x110>
 324:	ba 01       	movw	r22, r20
 326:	60 95       	com	r22
 328:	62 23       	and	r22, r18
 32a:	62 bb       	out	0x12, r22	; 18
 32c:	08 95       	ret

0000032e <DIO_U8read_pin>:
		break;
	}}
unsigned char DIO_U8read_pin(unsigned char port,unsigned char pin)
{
	unsigned char value;
	switch(port)
 32e:	84 34       	cpi	r24, 0x44	; 68
 330:	d9 f0       	breq	.+54     	; 0x368 <DIO_U8read_pin+0x3a>
 332:	85 34       	cpi	r24, 0x45	; 69
 334:	38 f4       	brcc	.+14     	; 0x344 <DIO_U8read_pin+0x16>
 336:	82 34       	cpi	r24, 0x42	; 66
 338:	99 f0       	breq	.+38     	; 0x360 <DIO_U8read_pin+0x32>
 33a:	83 34       	cpi	r24, 0x43	; 67
 33c:	98 f4       	brcc	.+38     	; 0x364 <DIO_U8read_pin+0x36>
 33e:	81 34       	cpi	r24, 0x41	; 65
 340:	a1 f4       	brne	.+40     	; 0x36a <DIO_U8read_pin+0x3c>
 342:	0c c0       	rjmp	.+24     	; 0x35c <DIO_U8read_pin+0x2e>
 344:	82 36       	cpi	r24, 0x62	; 98
 346:	61 f0       	breq	.+24     	; 0x360 <DIO_U8read_pin+0x32>
 348:	83 36       	cpi	r24, 0x63	; 99
 34a:	18 f4       	brcc	.+6      	; 0x352 <DIO_U8read_pin+0x24>
 34c:	81 36       	cpi	r24, 0x61	; 97
 34e:	69 f4       	brne	.+26     	; 0x36a <DIO_U8read_pin+0x3c>
 350:	05 c0       	rjmp	.+10     	; 0x35c <DIO_U8read_pin+0x2e>
 352:	83 36       	cpi	r24, 0x63	; 99
 354:	39 f0       	breq	.+14     	; 0x364 <DIO_U8read_pin+0x36>
 356:	84 36       	cpi	r24, 0x64	; 100
 358:	41 f4       	brne	.+16     	; 0x36a <DIO_U8read_pin+0x3c>
 35a:	06 c0       	rjmp	.+12     	; 0x368 <DIO_U8read_pin+0x3a>
	{
		case 'A':
		case 'a':
			value=READ_BIT(PINA,pin);
 35c:	89 b3       	in	r24, 0x19	; 25
			break;
 35e:	08 95       	ret
		case 'B':
		case 'b':
			value=READ_BIT(PINB,pin);
 360:	86 b3       	in	r24, 0x16	; 22
			break;
 362:	08 95       	ret
		case 'C':
		case 'c':
			value=READ_BIT(PINC,pin);
 364:	83 b3       	in	r24, 0x13	; 19
			break;
 366:	08 95       	ret
		case 'D':
		case 'd':
			value=READ_BIT(PIND,pin);
 368:	80 b3       	in	r24, 0x10	; 16
			break;
	}
} 
 36a:	08 95       	ret

0000036c <DIO_vtoggle>:
void DIO_vtoggle(unsigned char port,unsigned char pin)
{
switch(port)
 36c:	84 34       	cpi	r24, 0x44	; 68
 36e:	09 f4       	brne	.+2      	; 0x372 <DIO_vtoggle+0x6>
 370:	3d c0       	rjmp	.+122    	; 0x3ec <DIO_vtoggle+0x80>
 372:	85 34       	cpi	r24, 0x45	; 69
 374:	40 f4       	brcc	.+16     	; 0x386 <DIO_vtoggle+0x1a>
 376:	82 34       	cpi	r24, 0x42	; 66
 378:	f9 f0       	breq	.+62     	; 0x3b8 <DIO_vtoggle+0x4c>
 37a:	83 34       	cpi	r24, 0x43	; 67
 37c:	50 f5       	brcc	.+84     	; 0x3d2 <DIO_vtoggle+0x66>
 37e:	81 34       	cpi	r24, 0x41	; 65
 380:	09 f0       	breq	.+2      	; 0x384 <DIO_vtoggle+0x18>
 382:	40 c0       	rjmp	.+128    	; 0x404 <DIO_vtoggle+0x98>
 384:	0c c0       	rjmp	.+24     	; 0x39e <DIO_vtoggle+0x32>
 386:	82 36       	cpi	r24, 0x62	; 98
 388:	b9 f0       	breq	.+46     	; 0x3b8 <DIO_vtoggle+0x4c>
 38a:	83 36       	cpi	r24, 0x63	; 99
 38c:	18 f4       	brcc	.+6      	; 0x394 <DIO_vtoggle+0x28>
 38e:	81 36       	cpi	r24, 0x61	; 97
 390:	c9 f5       	brne	.+114    	; 0x404 <DIO_vtoggle+0x98>
 392:	05 c0       	rjmp	.+10     	; 0x39e <DIO_vtoggle+0x32>
 394:	83 36       	cpi	r24, 0x63	; 99
 396:	e9 f0       	breq	.+58     	; 0x3d2 <DIO_vtoggle+0x66>
 398:	84 36       	cpi	r24, 0x64	; 100
 39a:	a1 f5       	brne	.+104    	; 0x404 <DIO_vtoggle+0x98>
 39c:	27 c0       	rjmp	.+78     	; 0x3ec <DIO_vtoggle+0x80>
{
	case 'A':
	case 'a':
		TOG_BIT(PORTA,pin);
 39e:	2b b3       	in	r18, 0x1b	; 27
 3a0:	81 e0       	ldi	r24, 0x01	; 1
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	ac 01       	movw	r20, r24
 3a6:	02 c0       	rjmp	.+4      	; 0x3ac <DIO_vtoggle+0x40>
 3a8:	44 0f       	add	r20, r20
 3aa:	55 1f       	adc	r21, r21
 3ac:	6a 95       	dec	r22
 3ae:	e2 f7       	brpl	.-8      	; 0x3a8 <DIO_vtoggle+0x3c>
 3b0:	ba 01       	movw	r22, r20
 3b2:	62 27       	eor	r22, r18
 3b4:	6b bb       	out	0x1b, r22	; 27
		break;
 3b6:	08 95       	ret
	case 'B':
	case 'b':
		TOG_BIT(PORTB,pin);
 3b8:	28 b3       	in	r18, 0x18	; 24
 3ba:	81 e0       	ldi	r24, 0x01	; 1
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	ac 01       	movw	r20, r24
 3c0:	02 c0       	rjmp	.+4      	; 0x3c6 <DIO_vtoggle+0x5a>
 3c2:	44 0f       	add	r20, r20
 3c4:	55 1f       	adc	r21, r21
 3c6:	6a 95       	dec	r22
 3c8:	e2 f7       	brpl	.-8      	; 0x3c2 <DIO_vtoggle+0x56>
 3ca:	ba 01       	movw	r22, r20
 3cc:	62 27       	eor	r22, r18
 3ce:	68 bb       	out	0x18, r22	; 24
		break;
 3d0:	08 95       	ret
	case 'C':
	case 'c':
		TOG_BIT(PORTC,pin);
 3d2:	25 b3       	in	r18, 0x15	; 21
 3d4:	81 e0       	ldi	r24, 0x01	; 1
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	ac 01       	movw	r20, r24
 3da:	02 c0       	rjmp	.+4      	; 0x3e0 <DIO_vtoggle+0x74>
 3dc:	44 0f       	add	r20, r20
 3de:	55 1f       	adc	r21, r21
 3e0:	6a 95       	dec	r22
 3e2:	e2 f7       	brpl	.-8      	; 0x3dc <DIO_vtoggle+0x70>
 3e4:	ba 01       	movw	r22, r20
 3e6:	62 27       	eor	r22, r18
 3e8:	65 bb       	out	0x15, r22	; 21
		break;
 3ea:	08 95       	ret
	case 'D':
	case 'd':
		TOG_BIT(PORTD,pin);
 3ec:	22 b3       	in	r18, 0x12	; 18
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	ac 01       	movw	r20, r24
 3f4:	02 c0       	rjmp	.+4      	; 0x3fa <DIO_vtoggle+0x8e>
 3f6:	44 0f       	add	r20, r20
 3f8:	55 1f       	adc	r21, r21
 3fa:	6a 95       	dec	r22
 3fc:	e2 f7       	brpl	.-8      	; 0x3f6 <DIO_vtoggle+0x8a>
 3fe:	ba 01       	movw	r22, r20
 400:	62 27       	eor	r22, r18
 402:	62 bb       	out	0x12, r22	; 18
 404:	08 95       	ret

00000406 <DIO_vset_portdir>:
		break;
	}
}
void DIO_vset_portdir(unsigned char port,unsigned char dir)
{
	switch(port)
 406:	84 34       	cpi	r24, 0x44	; 68
 408:	d9 f0       	breq	.+54     	; 0x440 <DIO_vset_portdir+0x3a>
 40a:	85 34       	cpi	r24, 0x45	; 69
 40c:	38 f4       	brcc	.+14     	; 0x41c <DIO_vset_portdir+0x16>
 40e:	82 34       	cpi	r24, 0x42	; 66
 410:	99 f0       	breq	.+38     	; 0x438 <DIO_vset_portdir+0x32>
 412:	83 34       	cpi	r24, 0x43	; 67
 414:	98 f4       	brcc	.+38     	; 0x43c <DIO_vset_portdir+0x36>
 416:	81 34       	cpi	r24, 0x41	; 65
 418:	a1 f4       	brne	.+40     	; 0x442 <DIO_vset_portdir+0x3c>
 41a:	0c c0       	rjmp	.+24     	; 0x434 <DIO_vset_portdir+0x2e>
 41c:	82 36       	cpi	r24, 0x62	; 98
 41e:	61 f0       	breq	.+24     	; 0x438 <DIO_vset_portdir+0x32>
 420:	83 36       	cpi	r24, 0x63	; 99
 422:	18 f4       	brcc	.+6      	; 0x42a <DIO_vset_portdir+0x24>
 424:	81 36       	cpi	r24, 0x61	; 97
 426:	69 f4       	brne	.+26     	; 0x442 <DIO_vset_portdir+0x3c>
 428:	05 c0       	rjmp	.+10     	; 0x434 <DIO_vset_portdir+0x2e>
 42a:	83 36       	cpi	r24, 0x63	; 99
 42c:	39 f0       	breq	.+14     	; 0x43c <DIO_vset_portdir+0x36>
 42e:	84 36       	cpi	r24, 0x64	; 100
 430:	41 f4       	brne	.+16     	; 0x442 <DIO_vset_portdir+0x3c>
 432:	06 c0       	rjmp	.+12     	; 0x440 <DIO_vset_portdir+0x3a>
	{
		case 'A':
		case 'a':
		DDRA=dir;
 434:	6a bb       	out	0x1a, r22	; 26
		break;
 436:	08 95       	ret
		case 'B':
		case 'b':
		DDRB=dir;
 438:	67 bb       	out	0x17, r22	; 23
		break;
 43a:	08 95       	ret
		case 'C':
		case 'c':
		DDRC=dir;
 43c:	64 bb       	out	0x14, r22	; 20
		break;
 43e:	08 95       	ret
		case 'D':
		case 'd':
		DDRD=dir;
 440:	61 bb       	out	0x11, r22	; 17
 442:	08 95       	ret

00000444 <DIO_vwrite_port>:
		break;
	}
}
void DIO_vwrite_port(unsigned char port,unsigned char val)
{
	switch(port)
 444:	84 34       	cpi	r24, 0x44	; 68
 446:	d9 f0       	breq	.+54     	; 0x47e <DIO_vwrite_port+0x3a>
 448:	85 34       	cpi	r24, 0x45	; 69
 44a:	38 f4       	brcc	.+14     	; 0x45a <DIO_vwrite_port+0x16>
 44c:	82 34       	cpi	r24, 0x42	; 66
 44e:	99 f0       	breq	.+38     	; 0x476 <DIO_vwrite_port+0x32>
 450:	83 34       	cpi	r24, 0x43	; 67
 452:	98 f4       	brcc	.+38     	; 0x47a <DIO_vwrite_port+0x36>
 454:	81 34       	cpi	r24, 0x41	; 65
 456:	a1 f4       	brne	.+40     	; 0x480 <DIO_vwrite_port+0x3c>
 458:	0c c0       	rjmp	.+24     	; 0x472 <DIO_vwrite_port+0x2e>
 45a:	82 36       	cpi	r24, 0x62	; 98
 45c:	61 f0       	breq	.+24     	; 0x476 <DIO_vwrite_port+0x32>
 45e:	83 36       	cpi	r24, 0x63	; 99
 460:	18 f4       	brcc	.+6      	; 0x468 <DIO_vwrite_port+0x24>
 462:	81 36       	cpi	r24, 0x61	; 97
 464:	69 f4       	brne	.+26     	; 0x480 <DIO_vwrite_port+0x3c>
 466:	05 c0       	rjmp	.+10     	; 0x472 <DIO_vwrite_port+0x2e>
 468:	83 36       	cpi	r24, 0x63	; 99
 46a:	39 f0       	breq	.+14     	; 0x47a <DIO_vwrite_port+0x36>
 46c:	84 36       	cpi	r24, 0x64	; 100
 46e:	41 f4       	brne	.+16     	; 0x480 <DIO_vwrite_port+0x3c>
 470:	06 c0       	rjmp	.+12     	; 0x47e <DIO_vwrite_port+0x3a>
	{
		case 'A':
		case 'a':
		PORTA=val;
 472:	6b bb       	out	0x1b, r22	; 27
		break;
 474:	08 95       	ret
		case 'B':
		case 'b':
		PORTB=val;
 476:	68 bb       	out	0x18, r22	; 24
		break;
 478:	08 95       	ret
		case 'C':
		case 'c':
		PORTC=val;
 47a:	65 bb       	out	0x15, r22	; 21
		break;
 47c:	08 95       	ret
		case 'D':
		case 'd':
		PORTD=val;
 47e:	62 bb       	out	0x12, r22	; 18
 480:	08 95       	ret

00000482 <DIO_U8read_port>:
	}
}
unsigned char DIO_U8read_port(unsigned char port)
{
	int val;
	switch(port)
 482:	84 34       	cpi	r24, 0x44	; 68
 484:	d9 f0       	breq	.+54     	; 0x4bc <DIO_U8read_port+0x3a>
 486:	85 34       	cpi	r24, 0x45	; 69
 488:	38 f4       	brcc	.+14     	; 0x498 <DIO_U8read_port+0x16>
 48a:	82 34       	cpi	r24, 0x42	; 66
 48c:	99 f0       	breq	.+38     	; 0x4b4 <DIO_U8read_port+0x32>
 48e:	83 34       	cpi	r24, 0x43	; 67
 490:	98 f4       	brcc	.+38     	; 0x4b8 <DIO_U8read_port+0x36>
 492:	81 34       	cpi	r24, 0x41	; 65
 494:	a1 f4       	brne	.+40     	; 0x4be <DIO_U8read_port+0x3c>
 496:	0c c0       	rjmp	.+24     	; 0x4b0 <DIO_U8read_port+0x2e>
 498:	82 36       	cpi	r24, 0x62	; 98
 49a:	61 f0       	breq	.+24     	; 0x4b4 <DIO_U8read_port+0x32>
 49c:	83 36       	cpi	r24, 0x63	; 99
 49e:	18 f4       	brcc	.+6      	; 0x4a6 <DIO_U8read_port+0x24>
 4a0:	81 36       	cpi	r24, 0x61	; 97
 4a2:	69 f4       	brne	.+26     	; 0x4be <DIO_U8read_port+0x3c>
 4a4:	05 c0       	rjmp	.+10     	; 0x4b0 <DIO_U8read_port+0x2e>
 4a6:	83 36       	cpi	r24, 0x63	; 99
 4a8:	39 f0       	breq	.+14     	; 0x4b8 <DIO_U8read_port+0x36>
 4aa:	84 36       	cpi	r24, 0x64	; 100
 4ac:	41 f4       	brne	.+16     	; 0x4be <DIO_U8read_port+0x3c>
 4ae:	06 c0       	rjmp	.+12     	; 0x4bc <DIO_U8read_port+0x3a>
	{
		case 'A':
		case 'a':
		PINA=val;
 4b0:	19 ba       	out	0x19, r1	; 25
		break;
 4b2:	08 95       	ret
		case 'B':
		case 'b':
		val=PINB;
 4b4:	86 b3       	in	r24, 0x16	; 22
		break;
 4b6:	08 95       	ret
		case 'C':
		case 'c':
		val=PINC;
 4b8:	83 b3       	in	r24, 0x13	; 19
		break;
 4ba:	08 95       	ret
		case 'D':
		case 'd':
		val=PIND;
 4bc:	80 b3       	in	r24, 0x10	; 16
		break;
	}
}
 4be:	08 95       	ret

000004c0 <DIO_vtog_port>:
void DIO_vtog_port(unsigned char port)
{
	switch(port)
 4c0:	84 34       	cpi	r24, 0x44	; 68
 4c2:	09 f1       	breq	.+66     	; 0x506 <DIO_vtog_port+0x46>
 4c4:	85 34       	cpi	r24, 0x45	; 69
 4c6:	38 f4       	brcc	.+14     	; 0x4d6 <DIO_vtog_port+0x16>
 4c8:	82 34       	cpi	r24, 0x42	; 66
 4ca:	a9 f0       	breq	.+42     	; 0x4f6 <DIO_vtog_port+0x36>
 4cc:	83 34       	cpi	r24, 0x43	; 67
 4ce:	b8 f4       	brcc	.+46     	; 0x4fe <DIO_vtog_port+0x3e>
 4d0:	81 34       	cpi	r24, 0x41	; 65
 4d2:	e1 f4       	brne	.+56     	; 0x50c <DIO_vtog_port+0x4c>
 4d4:	0c c0       	rjmp	.+24     	; 0x4ee <DIO_vtog_port+0x2e>
 4d6:	82 36       	cpi	r24, 0x62	; 98
 4d8:	71 f0       	breq	.+28     	; 0x4f6 <DIO_vtog_port+0x36>
 4da:	83 36       	cpi	r24, 0x63	; 99
 4dc:	18 f4       	brcc	.+6      	; 0x4e4 <DIO_vtog_port+0x24>
 4de:	81 36       	cpi	r24, 0x61	; 97
 4e0:	a9 f4       	brne	.+42     	; 0x50c <DIO_vtog_port+0x4c>
 4e2:	05 c0       	rjmp	.+10     	; 0x4ee <DIO_vtog_port+0x2e>
 4e4:	83 36       	cpi	r24, 0x63	; 99
 4e6:	59 f0       	breq	.+22     	; 0x4fe <DIO_vtog_port+0x3e>
 4e8:	84 36       	cpi	r24, 0x64	; 100
 4ea:	81 f4       	brne	.+32     	; 0x50c <DIO_vtog_port+0x4c>
 4ec:	0c c0       	rjmp	.+24     	; 0x506 <DIO_vtog_port+0x46>
	{
		case 'A':
		case 'a':
		PORTA=~PORTA;
 4ee:	8b b3       	in	r24, 0x1b	; 27
 4f0:	80 95       	com	r24
 4f2:	8b bb       	out	0x1b, r24	; 27
		break;
 4f4:	08 95       	ret
		case 'B':
		case 'b':
		PORTB=~PORTB;
 4f6:	88 b3       	in	r24, 0x18	; 24
 4f8:	80 95       	com	r24
 4fa:	88 bb       	out	0x18, r24	; 24
		break;
 4fc:	08 95       	ret
		case 'C':
		case 'c':
		PORTC=~PORTC;
 4fe:	85 b3       	in	r24, 0x15	; 21
 500:	80 95       	com	r24
 502:	85 bb       	out	0x15, r24	; 21
		break;
 504:	08 95       	ret
		case 'D':
		case 'd':
		PORTD=~PORTD;
 506:	82 b3       	in	r24, 0x12	; 18
 508:	80 95       	com	r24
 50a:	82 bb       	out	0x12, r24	; 18
 50c:	08 95       	ret

0000050e <_exit>:
 50e:	f8 94       	cli

00000510 <__stop_program>:
 510:	ff cf       	rjmp	.-2      	; 0x510 <__stop_program>
