
7seg_bcd.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000069c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000069c  00000710  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000710  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000ddc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000000c0  00000000  00000000  00000e68  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006d4  00000000  00000000  00000f28  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000244  00000000  00000000  000015fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004c8  00000000  00000000  00001840  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000114  00000000  00000000  00001d08  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000210  00000000  00000000  00001e1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000051a  00000000  00000000  0000202c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e9       	ldi	r30, 0x9C	; 156
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 4c 03 	jmp	0x698	; 0x698 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#define F_CPU 8000000UL
#include <util/delay.h>

int main(void)
{
	sevenseg_vinit_bcd('a');
  92:	81 e6       	ldi	r24, 0x61	; 97
  94:	0e 94 05 03 	call	0x60a	; 0x60a <sevenseg_vinit_bcd>
	char i;
    while(1)
    {
        for(i=0;i<=9;i++)
  98:	c0 e0       	ldi	r28, 0x00	; 0
  9a:	d0 e0       	ldi	r29, 0x00	; 0
		{
			sevenseg_vwrite_bcd('a',i);
  9c:	81 e6       	ldi	r24, 0x61	; 97
  9e:	6c 2f       	mov	r22, r28
  a0:	0e 94 1c 03 	call	0x638	; 0x638 <sevenseg_vwrite_bcd>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a4:	8f ef       	ldi	r24, 0xFF	; 255
  a6:	99 e6       	ldi	r25, 0x69	; 105
  a8:	a8 e1       	ldi	r26, 0x18	; 24
  aa:	81 50       	subi	r24, 0x01	; 1
  ac:	90 40       	sbci	r25, 0x00	; 0
  ae:	a0 40       	sbci	r26, 0x00	; 0
  b0:	e1 f7       	brne	.-8      	; 0xaa <main+0x18>
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <main+0x22>
  b4:	00 00       	nop
{
	sevenseg_vinit_bcd('a');
	char i;
    while(1)
    {
        for(i=0;i<=9;i++)
  b6:	cf 5f       	subi	r28, 0xFF	; 255
  b8:	ca 30       	cpi	r28, 0x0A	; 10
  ba:	80 f3       	brcs	.-32     	; 0x9c <main+0xa>
  bc:	cd 2f       	mov	r28, r29
  be:	ee cf       	rjmp	.-36     	; 0x9c <main+0xa>

000000c0 <DIO_vset_pindir>:
#define F_CPU 8000000UL
#include <util/delay.h>
#include "std_macros.h"
void DIO_vset_pindir(unsigned char port,unsigned char pin,unsigned char dir)
{
switch(port)
  c0:	84 34       	cpi	r24, 0x44	; 68
  c2:	09 f4       	brne	.+2      	; 0xc6 <DIO_vset_pindir+0x6>
  c4:	71 c0       	rjmp	.+226    	; 0x1a8 <DIO_vset_pindir+0xe8>
  c6:	85 34       	cpi	r24, 0x45	; 69
  c8:	48 f4       	brcc	.+18     	; 0xdc <DIO_vset_pindir+0x1c>
  ca:	82 34       	cpi	r24, 0x42	; 66
  cc:	99 f1       	breq	.+102    	; 0x134 <DIO_vset_pindir+0x74>
  ce:	83 34       	cpi	r24, 0x43	; 67
  d0:	08 f0       	brcs	.+2      	; 0xd4 <DIO_vset_pindir+0x14>
  d2:	4d c0       	rjmp	.+154    	; 0x16e <DIO_vset_pindir+0xae>
  d4:	81 34       	cpi	r24, 0x41	; 65
  d6:	09 f0       	breq	.+2      	; 0xda <DIO_vset_pindir+0x1a>
  d8:	83 c0       	rjmp	.+262    	; 0x1e0 <DIO_vset_pindir+0x120>
  da:	0f c0       	rjmp	.+30     	; 0xfa <DIO_vset_pindir+0x3a>
  dc:	82 36       	cpi	r24, 0x62	; 98
  de:	51 f1       	breq	.+84     	; 0x134 <DIO_vset_pindir+0x74>
  e0:	83 36       	cpi	r24, 0x63	; 99
  e2:	20 f4       	brcc	.+8      	; 0xec <DIO_vset_pindir+0x2c>
  e4:	81 36       	cpi	r24, 0x61	; 97
  e6:	09 f0       	breq	.+2      	; 0xea <DIO_vset_pindir+0x2a>
  e8:	7b c0       	rjmp	.+246    	; 0x1e0 <DIO_vset_pindir+0x120>
  ea:	07 c0       	rjmp	.+14     	; 0xfa <DIO_vset_pindir+0x3a>
  ec:	83 36       	cpi	r24, 0x63	; 99
  ee:	09 f4       	brne	.+2      	; 0xf2 <DIO_vset_pindir+0x32>
  f0:	3e c0       	rjmp	.+124    	; 0x16e <DIO_vset_pindir+0xae>
  f2:	84 36       	cpi	r24, 0x64	; 100
  f4:	09 f0       	breq	.+2      	; 0xf8 <DIO_vset_pindir+0x38>
  f6:	74 c0       	rjmp	.+232    	; 0x1e0 <DIO_vset_pindir+0x120>
  f8:	57 c0       	rjmp	.+174    	; 0x1a8 <DIO_vset_pindir+0xe8>
{
	case 'A':
	case 'a':
	if(dir==1)
  fa:	41 30       	cpi	r20, 0x01	; 1
  fc:	69 f4       	brne	.+26     	; 0x118 <DIO_vset_pindir+0x58>
	{
		SET_BIT(DDRA,pin);
  fe:	2a b3       	in	r18, 0x1a	; 26
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	ac 01       	movw	r20, r24
 106:	02 c0       	rjmp	.+4      	; 0x10c <DIO_vset_pindir+0x4c>
 108:	44 0f       	add	r20, r20
 10a:	55 1f       	adc	r21, r21
 10c:	6a 95       	dec	r22
 10e:	e2 f7       	brpl	.-8      	; 0x108 <DIO_vset_pindir+0x48>
 110:	ba 01       	movw	r22, r20
 112:	62 2b       	or	r22, r18
 114:	6a bb       	out	0x1a, r22	; 26
 116:	08 95       	ret
	} 
	else
	{
		CLR_BIT(DDRA,pin);
 118:	2a b3       	in	r18, 0x1a	; 26
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	ac 01       	movw	r20, r24
 120:	02 c0       	rjmp	.+4      	; 0x126 <DIO_vset_pindir+0x66>
 122:	44 0f       	add	r20, r20
 124:	55 1f       	adc	r21, r21
 126:	6a 95       	dec	r22
 128:	e2 f7       	brpl	.-8      	; 0x122 <DIO_vset_pindir+0x62>
 12a:	ba 01       	movw	r22, r20
 12c:	60 95       	com	r22
 12e:	62 23       	and	r22, r18
 130:	6a bb       	out	0x1a, r22	; 26
 132:	08 95       	ret
	}
	break;
	case 'B':
	case 'b':
	if(dir==1)
 134:	41 30       	cpi	r20, 0x01	; 1
 136:	69 f4       	brne	.+26     	; 0x152 <DIO_vset_pindir+0x92>
	{
		SET_BIT(DDRB,pin);
 138:	27 b3       	in	r18, 0x17	; 23
 13a:	81 e0       	ldi	r24, 0x01	; 1
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	ac 01       	movw	r20, r24
 140:	02 c0       	rjmp	.+4      	; 0x146 <DIO_vset_pindir+0x86>
 142:	44 0f       	add	r20, r20
 144:	55 1f       	adc	r21, r21
 146:	6a 95       	dec	r22
 148:	e2 f7       	brpl	.-8      	; 0x142 <DIO_vset_pindir+0x82>
 14a:	ba 01       	movw	r22, r20
 14c:	62 2b       	or	r22, r18
 14e:	67 bb       	out	0x17, r22	; 23
 150:	08 95       	ret
	}
	else
	{
		CLR_BIT(DDRB,pin);
 152:	27 b3       	in	r18, 0x17	; 23
 154:	81 e0       	ldi	r24, 0x01	; 1
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	ac 01       	movw	r20, r24
 15a:	02 c0       	rjmp	.+4      	; 0x160 <DIO_vset_pindir+0xa0>
 15c:	44 0f       	add	r20, r20
 15e:	55 1f       	adc	r21, r21
 160:	6a 95       	dec	r22
 162:	e2 f7       	brpl	.-8      	; 0x15c <DIO_vset_pindir+0x9c>
 164:	ba 01       	movw	r22, r20
 166:	60 95       	com	r22
 168:	62 23       	and	r22, r18
 16a:	67 bb       	out	0x17, r22	; 23
 16c:	08 95       	ret
	}
	break;
	case 'C':
	case 'c':
	if(dir==1)
 16e:	41 30       	cpi	r20, 0x01	; 1
 170:	69 f4       	brne	.+26     	; 0x18c <DIO_vset_pindir+0xcc>
	{
		SET_BIT(DDRC,pin);
 172:	24 b3       	in	r18, 0x14	; 20
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	ac 01       	movw	r20, r24
 17a:	02 c0       	rjmp	.+4      	; 0x180 <DIO_vset_pindir+0xc0>
 17c:	44 0f       	add	r20, r20
 17e:	55 1f       	adc	r21, r21
 180:	6a 95       	dec	r22
 182:	e2 f7       	brpl	.-8      	; 0x17c <DIO_vset_pindir+0xbc>
 184:	ba 01       	movw	r22, r20
 186:	62 2b       	or	r22, r18
 188:	64 bb       	out	0x14, r22	; 20
 18a:	08 95       	ret
	}
	else
	{
		CLR_BIT(DDRC,pin);
 18c:	24 b3       	in	r18, 0x14	; 20
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	ac 01       	movw	r20, r24
 194:	02 c0       	rjmp	.+4      	; 0x19a <DIO_vset_pindir+0xda>
 196:	44 0f       	add	r20, r20
 198:	55 1f       	adc	r21, r21
 19a:	6a 95       	dec	r22
 19c:	e2 f7       	brpl	.-8      	; 0x196 <DIO_vset_pindir+0xd6>
 19e:	ba 01       	movw	r22, r20
 1a0:	60 95       	com	r22
 1a2:	62 23       	and	r22, r18
 1a4:	64 bb       	out	0x14, r22	; 20
 1a6:	08 95       	ret
	}
	break;
	case 'D':
	case 'd':
	if(dir==1)
 1a8:	41 30       	cpi	r20, 0x01	; 1
 1aa:	69 f4       	brne	.+26     	; 0x1c6 <DIO_vset_pindir+0x106>
	{
		SET_BIT(DDRD,pin);
 1ac:	21 b3       	in	r18, 0x11	; 17
 1ae:	81 e0       	ldi	r24, 0x01	; 1
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	ac 01       	movw	r20, r24
 1b4:	02 c0       	rjmp	.+4      	; 0x1ba <DIO_vset_pindir+0xfa>
 1b6:	44 0f       	add	r20, r20
 1b8:	55 1f       	adc	r21, r21
 1ba:	6a 95       	dec	r22
 1bc:	e2 f7       	brpl	.-8      	; 0x1b6 <DIO_vset_pindir+0xf6>
 1be:	ba 01       	movw	r22, r20
 1c0:	62 2b       	or	r22, r18
 1c2:	61 bb       	out	0x11, r22	; 17
 1c4:	08 95       	ret
	}
	else
	{
		CLR_BIT(DDRD,pin);
 1c6:	21 b3       	in	r18, 0x11	; 17
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	ac 01       	movw	r20, r24
 1ce:	02 c0       	rjmp	.+4      	; 0x1d4 <DIO_vset_pindir+0x114>
 1d0:	44 0f       	add	r20, r20
 1d2:	55 1f       	adc	r21, r21
 1d4:	6a 95       	dec	r22
 1d6:	e2 f7       	brpl	.-8      	; 0x1d0 <DIO_vset_pindir+0x110>
 1d8:	ba 01       	movw	r22, r20
 1da:	60 95       	com	r22
 1dc:	62 23       	and	r22, r18
 1de:	61 bb       	out	0x11, r22	; 17
 1e0:	08 95       	ret

000001e2 <DIO_vwrite_pin>:
	}
	break;
}}
void DIO_vwrite_pin(unsigned char port,unsigned char pin,unsigned char val)
{
	switch(port)
 1e2:	84 34       	cpi	r24, 0x44	; 68
 1e4:	09 f4       	brne	.+2      	; 0x1e8 <DIO_vwrite_pin+0x6>
 1e6:	71 c0       	rjmp	.+226    	; 0x2ca <DIO_vwrite_pin+0xe8>
 1e8:	85 34       	cpi	r24, 0x45	; 69
 1ea:	48 f4       	brcc	.+18     	; 0x1fe <DIO_vwrite_pin+0x1c>
 1ec:	82 34       	cpi	r24, 0x42	; 66
 1ee:	99 f1       	breq	.+102    	; 0x256 <DIO_vwrite_pin+0x74>
 1f0:	83 34       	cpi	r24, 0x43	; 67
 1f2:	08 f0       	brcs	.+2      	; 0x1f6 <DIO_vwrite_pin+0x14>
 1f4:	4d c0       	rjmp	.+154    	; 0x290 <DIO_vwrite_pin+0xae>
 1f6:	81 34       	cpi	r24, 0x41	; 65
 1f8:	09 f0       	breq	.+2      	; 0x1fc <DIO_vwrite_pin+0x1a>
 1fa:	83 c0       	rjmp	.+262    	; 0x302 <DIO_vwrite_pin+0x120>
 1fc:	0f c0       	rjmp	.+30     	; 0x21c <DIO_vwrite_pin+0x3a>
 1fe:	82 36       	cpi	r24, 0x62	; 98
 200:	51 f1       	breq	.+84     	; 0x256 <DIO_vwrite_pin+0x74>
 202:	83 36       	cpi	r24, 0x63	; 99
 204:	20 f4       	brcc	.+8      	; 0x20e <DIO_vwrite_pin+0x2c>
 206:	81 36       	cpi	r24, 0x61	; 97
 208:	09 f0       	breq	.+2      	; 0x20c <DIO_vwrite_pin+0x2a>
 20a:	7b c0       	rjmp	.+246    	; 0x302 <DIO_vwrite_pin+0x120>
 20c:	07 c0       	rjmp	.+14     	; 0x21c <DIO_vwrite_pin+0x3a>
 20e:	83 36       	cpi	r24, 0x63	; 99
 210:	09 f4       	brne	.+2      	; 0x214 <DIO_vwrite_pin+0x32>
 212:	3e c0       	rjmp	.+124    	; 0x290 <DIO_vwrite_pin+0xae>
 214:	84 36       	cpi	r24, 0x64	; 100
 216:	09 f0       	breq	.+2      	; 0x21a <DIO_vwrite_pin+0x38>
 218:	74 c0       	rjmp	.+232    	; 0x302 <DIO_vwrite_pin+0x120>
 21a:	57 c0       	rjmp	.+174    	; 0x2ca <DIO_vwrite_pin+0xe8>
	{
		case 'A':
		case 'a':
		if(val==1)
 21c:	41 30       	cpi	r20, 0x01	; 1
 21e:	69 f4       	brne	.+26     	; 0x23a <DIO_vwrite_pin+0x58>
		{
			SET_BIT(PORTA,pin);
 220:	2b b3       	in	r18, 0x1b	; 27
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	ac 01       	movw	r20, r24
 228:	02 c0       	rjmp	.+4      	; 0x22e <DIO_vwrite_pin+0x4c>
 22a:	44 0f       	add	r20, r20
 22c:	55 1f       	adc	r21, r21
 22e:	6a 95       	dec	r22
 230:	e2 f7       	brpl	.-8      	; 0x22a <DIO_vwrite_pin+0x48>
 232:	ba 01       	movw	r22, r20
 234:	62 2b       	or	r22, r18
 236:	6b bb       	out	0x1b, r22	; 27
 238:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTA,pin);
 23a:	2b b3       	in	r18, 0x1b	; 27
 23c:	81 e0       	ldi	r24, 0x01	; 1
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	ac 01       	movw	r20, r24
 242:	02 c0       	rjmp	.+4      	; 0x248 <DIO_vwrite_pin+0x66>
 244:	44 0f       	add	r20, r20
 246:	55 1f       	adc	r21, r21
 248:	6a 95       	dec	r22
 24a:	e2 f7       	brpl	.-8      	; 0x244 <DIO_vwrite_pin+0x62>
 24c:	ba 01       	movw	r22, r20
 24e:	60 95       	com	r22
 250:	62 23       	and	r22, r18
 252:	6b bb       	out	0x1b, r22	; 27
 254:	08 95       	ret
		}
		break;
		case 'B':
		case 'b':
		if(val==1)
 256:	41 30       	cpi	r20, 0x01	; 1
 258:	69 f4       	brne	.+26     	; 0x274 <DIO_vwrite_pin+0x92>
		{
			SET_BIT(PORTB,pin);
 25a:	28 b3       	in	r18, 0x18	; 24
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	ac 01       	movw	r20, r24
 262:	02 c0       	rjmp	.+4      	; 0x268 <DIO_vwrite_pin+0x86>
 264:	44 0f       	add	r20, r20
 266:	55 1f       	adc	r21, r21
 268:	6a 95       	dec	r22
 26a:	e2 f7       	brpl	.-8      	; 0x264 <DIO_vwrite_pin+0x82>
 26c:	ba 01       	movw	r22, r20
 26e:	62 2b       	or	r22, r18
 270:	68 bb       	out	0x18, r22	; 24
 272:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTB,pin);
 274:	28 b3       	in	r18, 0x18	; 24
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	ac 01       	movw	r20, r24
 27c:	02 c0       	rjmp	.+4      	; 0x282 <DIO_vwrite_pin+0xa0>
 27e:	44 0f       	add	r20, r20
 280:	55 1f       	adc	r21, r21
 282:	6a 95       	dec	r22
 284:	e2 f7       	brpl	.-8      	; 0x27e <DIO_vwrite_pin+0x9c>
 286:	ba 01       	movw	r22, r20
 288:	60 95       	com	r22
 28a:	62 23       	and	r22, r18
 28c:	68 bb       	out	0x18, r22	; 24
 28e:	08 95       	ret
		}
		break;
		case 'C':
		case 'c':
		if(val==1)
 290:	41 30       	cpi	r20, 0x01	; 1
 292:	69 f4       	brne	.+26     	; 0x2ae <DIO_vwrite_pin+0xcc>
		{
			SET_BIT(PORTC,pin);
 294:	25 b3       	in	r18, 0x15	; 21
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	ac 01       	movw	r20, r24
 29c:	02 c0       	rjmp	.+4      	; 0x2a2 <DIO_vwrite_pin+0xc0>
 29e:	44 0f       	add	r20, r20
 2a0:	55 1f       	adc	r21, r21
 2a2:	6a 95       	dec	r22
 2a4:	e2 f7       	brpl	.-8      	; 0x29e <DIO_vwrite_pin+0xbc>
 2a6:	ba 01       	movw	r22, r20
 2a8:	62 2b       	or	r22, r18
 2aa:	65 bb       	out	0x15, r22	; 21
 2ac:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTC,pin);
 2ae:	25 b3       	in	r18, 0x15	; 21
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	ac 01       	movw	r20, r24
 2b6:	02 c0       	rjmp	.+4      	; 0x2bc <DIO_vwrite_pin+0xda>
 2b8:	44 0f       	add	r20, r20
 2ba:	55 1f       	adc	r21, r21
 2bc:	6a 95       	dec	r22
 2be:	e2 f7       	brpl	.-8      	; 0x2b8 <DIO_vwrite_pin+0xd6>
 2c0:	ba 01       	movw	r22, r20
 2c2:	60 95       	com	r22
 2c4:	62 23       	and	r22, r18
 2c6:	65 bb       	out	0x15, r22	; 21
 2c8:	08 95       	ret
		}
		break;
		case 'D':
		case 'd':
		if(val==1)
 2ca:	41 30       	cpi	r20, 0x01	; 1
 2cc:	69 f4       	brne	.+26     	; 0x2e8 <DIO_vwrite_pin+0x106>
		{
			SET_BIT(PORTD,pin);
 2ce:	22 b3       	in	r18, 0x12	; 18
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	ac 01       	movw	r20, r24
 2d6:	02 c0       	rjmp	.+4      	; 0x2dc <DIO_vwrite_pin+0xfa>
 2d8:	44 0f       	add	r20, r20
 2da:	55 1f       	adc	r21, r21
 2dc:	6a 95       	dec	r22
 2de:	e2 f7       	brpl	.-8      	; 0x2d8 <DIO_vwrite_pin+0xf6>
 2e0:	ba 01       	movw	r22, r20
 2e2:	62 2b       	or	r22, r18
 2e4:	62 bb       	out	0x12, r22	; 18
 2e6:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTD,pin);
 2e8:	22 b3       	in	r18, 0x12	; 18
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	ac 01       	movw	r20, r24
 2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <DIO_vwrite_pin+0x114>
 2f2:	44 0f       	add	r20, r20
 2f4:	55 1f       	adc	r21, r21
 2f6:	6a 95       	dec	r22
 2f8:	e2 f7       	brpl	.-8      	; 0x2f2 <DIO_vwrite_pin+0x110>
 2fa:	ba 01       	movw	r22, r20
 2fc:	60 95       	com	r22
 2fe:	62 23       	and	r22, r18
 300:	62 bb       	out	0x12, r22	; 18
 302:	08 95       	ret

00000304 <DIO_U8read_pin>:
		break;
	}}
unsigned char DIO_U8read_pin(unsigned char port,unsigned char pin)
{
	unsigned char value;
	switch(port)
 304:	84 34       	cpi	r24, 0x44	; 68
 306:	d9 f0       	breq	.+54     	; 0x33e <DIO_U8read_pin+0x3a>
 308:	85 34       	cpi	r24, 0x45	; 69
 30a:	38 f4       	brcc	.+14     	; 0x31a <DIO_U8read_pin+0x16>
 30c:	82 34       	cpi	r24, 0x42	; 66
 30e:	99 f0       	breq	.+38     	; 0x336 <DIO_U8read_pin+0x32>
 310:	83 34       	cpi	r24, 0x43	; 67
 312:	98 f4       	brcc	.+38     	; 0x33a <DIO_U8read_pin+0x36>
 314:	81 34       	cpi	r24, 0x41	; 65
 316:	a1 f4       	brne	.+40     	; 0x340 <DIO_U8read_pin+0x3c>
 318:	0c c0       	rjmp	.+24     	; 0x332 <DIO_U8read_pin+0x2e>
 31a:	82 36       	cpi	r24, 0x62	; 98
 31c:	61 f0       	breq	.+24     	; 0x336 <DIO_U8read_pin+0x32>
 31e:	83 36       	cpi	r24, 0x63	; 99
 320:	18 f4       	brcc	.+6      	; 0x328 <DIO_U8read_pin+0x24>
 322:	81 36       	cpi	r24, 0x61	; 97
 324:	69 f4       	brne	.+26     	; 0x340 <DIO_U8read_pin+0x3c>
 326:	05 c0       	rjmp	.+10     	; 0x332 <DIO_U8read_pin+0x2e>
 328:	83 36       	cpi	r24, 0x63	; 99
 32a:	39 f0       	breq	.+14     	; 0x33a <DIO_U8read_pin+0x36>
 32c:	84 36       	cpi	r24, 0x64	; 100
 32e:	41 f4       	brne	.+16     	; 0x340 <DIO_U8read_pin+0x3c>
 330:	06 c0       	rjmp	.+12     	; 0x33e <DIO_U8read_pin+0x3a>
	{
		case 'A':
		case 'a':
			value=READ_BIT(PINA,pin);
 332:	89 b3       	in	r24, 0x19	; 25
			break;
 334:	08 95       	ret
		case 'B':
		case 'b':
			value=READ_BIT(PINB,pin);
 336:	86 b3       	in	r24, 0x16	; 22
			break;
 338:	08 95       	ret
		case 'C':
		case 'c':
			value=READ_BIT(PINC,pin);
 33a:	83 b3       	in	r24, 0x13	; 19
			break;
 33c:	08 95       	ret
		case 'D':
		case 'd':
			value=READ_BIT(PIND,pin);
 33e:	80 b3       	in	r24, 0x10	; 16
			break;
	}
} 
 340:	08 95       	ret

00000342 <DIO_vtoggle>:
void DIO_vtoggle(unsigned char port,unsigned char pin)
{
switch(port)
 342:	84 34       	cpi	r24, 0x44	; 68
 344:	09 f4       	brne	.+2      	; 0x348 <DIO_vtoggle+0x6>
 346:	3d c0       	rjmp	.+122    	; 0x3c2 <DIO_vtoggle+0x80>
 348:	85 34       	cpi	r24, 0x45	; 69
 34a:	40 f4       	brcc	.+16     	; 0x35c <DIO_vtoggle+0x1a>
 34c:	82 34       	cpi	r24, 0x42	; 66
 34e:	f9 f0       	breq	.+62     	; 0x38e <DIO_vtoggle+0x4c>
 350:	83 34       	cpi	r24, 0x43	; 67
 352:	50 f5       	brcc	.+84     	; 0x3a8 <DIO_vtoggle+0x66>
 354:	81 34       	cpi	r24, 0x41	; 65
 356:	09 f0       	breq	.+2      	; 0x35a <DIO_vtoggle+0x18>
 358:	40 c0       	rjmp	.+128    	; 0x3da <DIO_vtoggle+0x98>
 35a:	0c c0       	rjmp	.+24     	; 0x374 <DIO_vtoggle+0x32>
 35c:	82 36       	cpi	r24, 0x62	; 98
 35e:	b9 f0       	breq	.+46     	; 0x38e <DIO_vtoggle+0x4c>
 360:	83 36       	cpi	r24, 0x63	; 99
 362:	18 f4       	brcc	.+6      	; 0x36a <DIO_vtoggle+0x28>
 364:	81 36       	cpi	r24, 0x61	; 97
 366:	c9 f5       	brne	.+114    	; 0x3da <DIO_vtoggle+0x98>
 368:	05 c0       	rjmp	.+10     	; 0x374 <DIO_vtoggle+0x32>
 36a:	83 36       	cpi	r24, 0x63	; 99
 36c:	e9 f0       	breq	.+58     	; 0x3a8 <DIO_vtoggle+0x66>
 36e:	84 36       	cpi	r24, 0x64	; 100
 370:	a1 f5       	brne	.+104    	; 0x3da <DIO_vtoggle+0x98>
 372:	27 c0       	rjmp	.+78     	; 0x3c2 <DIO_vtoggle+0x80>
{
	case 'A':
	case 'a':
		TOG_BIT(PORTA,pin);
 374:	2b b3       	in	r18, 0x1b	; 27
 376:	81 e0       	ldi	r24, 0x01	; 1
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	ac 01       	movw	r20, r24
 37c:	02 c0       	rjmp	.+4      	; 0x382 <DIO_vtoggle+0x40>
 37e:	44 0f       	add	r20, r20
 380:	55 1f       	adc	r21, r21
 382:	6a 95       	dec	r22
 384:	e2 f7       	brpl	.-8      	; 0x37e <DIO_vtoggle+0x3c>
 386:	ba 01       	movw	r22, r20
 388:	62 27       	eor	r22, r18
 38a:	6b bb       	out	0x1b, r22	; 27
		break;
 38c:	08 95       	ret
	case 'B':
	case 'b':
		TOG_BIT(PORTB,pin);
 38e:	28 b3       	in	r18, 0x18	; 24
 390:	81 e0       	ldi	r24, 0x01	; 1
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	ac 01       	movw	r20, r24
 396:	02 c0       	rjmp	.+4      	; 0x39c <DIO_vtoggle+0x5a>
 398:	44 0f       	add	r20, r20
 39a:	55 1f       	adc	r21, r21
 39c:	6a 95       	dec	r22
 39e:	e2 f7       	brpl	.-8      	; 0x398 <DIO_vtoggle+0x56>
 3a0:	ba 01       	movw	r22, r20
 3a2:	62 27       	eor	r22, r18
 3a4:	68 bb       	out	0x18, r22	; 24
		break;
 3a6:	08 95       	ret
	case 'C':
	case 'c':
		TOG_BIT(PORTC,pin);
 3a8:	25 b3       	in	r18, 0x15	; 21
 3aa:	81 e0       	ldi	r24, 0x01	; 1
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	ac 01       	movw	r20, r24
 3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <DIO_vtoggle+0x74>
 3b2:	44 0f       	add	r20, r20
 3b4:	55 1f       	adc	r21, r21
 3b6:	6a 95       	dec	r22
 3b8:	e2 f7       	brpl	.-8      	; 0x3b2 <DIO_vtoggle+0x70>
 3ba:	ba 01       	movw	r22, r20
 3bc:	62 27       	eor	r22, r18
 3be:	65 bb       	out	0x15, r22	; 21
		break;
 3c0:	08 95       	ret
	case 'D':
	case 'd':
		TOG_BIT(PORTD,pin);
 3c2:	22 b3       	in	r18, 0x12	; 18
 3c4:	81 e0       	ldi	r24, 0x01	; 1
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	ac 01       	movw	r20, r24
 3ca:	02 c0       	rjmp	.+4      	; 0x3d0 <DIO_vtoggle+0x8e>
 3cc:	44 0f       	add	r20, r20
 3ce:	55 1f       	adc	r21, r21
 3d0:	6a 95       	dec	r22
 3d2:	e2 f7       	brpl	.-8      	; 0x3cc <DIO_vtoggle+0x8a>
 3d4:	ba 01       	movw	r22, r20
 3d6:	62 27       	eor	r22, r18
 3d8:	62 bb       	out	0x12, r22	; 18
 3da:	08 95       	ret

000003dc <DIO_vset_portdir>:
		break;
	}
}
void DIO_vset_portdir(unsigned char port,unsigned char dir)
{
	switch(port)
 3dc:	84 34       	cpi	r24, 0x44	; 68
 3de:	d9 f0       	breq	.+54     	; 0x416 <DIO_vset_portdir+0x3a>
 3e0:	85 34       	cpi	r24, 0x45	; 69
 3e2:	38 f4       	brcc	.+14     	; 0x3f2 <DIO_vset_portdir+0x16>
 3e4:	82 34       	cpi	r24, 0x42	; 66
 3e6:	99 f0       	breq	.+38     	; 0x40e <DIO_vset_portdir+0x32>
 3e8:	83 34       	cpi	r24, 0x43	; 67
 3ea:	98 f4       	brcc	.+38     	; 0x412 <DIO_vset_portdir+0x36>
 3ec:	81 34       	cpi	r24, 0x41	; 65
 3ee:	a1 f4       	brne	.+40     	; 0x418 <DIO_vset_portdir+0x3c>
 3f0:	0c c0       	rjmp	.+24     	; 0x40a <DIO_vset_portdir+0x2e>
 3f2:	82 36       	cpi	r24, 0x62	; 98
 3f4:	61 f0       	breq	.+24     	; 0x40e <DIO_vset_portdir+0x32>
 3f6:	83 36       	cpi	r24, 0x63	; 99
 3f8:	18 f4       	brcc	.+6      	; 0x400 <DIO_vset_portdir+0x24>
 3fa:	81 36       	cpi	r24, 0x61	; 97
 3fc:	69 f4       	brne	.+26     	; 0x418 <DIO_vset_portdir+0x3c>
 3fe:	05 c0       	rjmp	.+10     	; 0x40a <DIO_vset_portdir+0x2e>
 400:	83 36       	cpi	r24, 0x63	; 99
 402:	39 f0       	breq	.+14     	; 0x412 <DIO_vset_portdir+0x36>
 404:	84 36       	cpi	r24, 0x64	; 100
 406:	41 f4       	brne	.+16     	; 0x418 <DIO_vset_portdir+0x3c>
 408:	06 c0       	rjmp	.+12     	; 0x416 <DIO_vset_portdir+0x3a>
	{
		case 'A':
		case 'a':
		DDRA=dir;
 40a:	6a bb       	out	0x1a, r22	; 26
		break;
 40c:	08 95       	ret
		case 'B':
		case 'b':
		DDRB=dir;
 40e:	67 bb       	out	0x17, r22	; 23
		break;
 410:	08 95       	ret
		case 'C':
		case 'c':
		DDRC=dir;
 412:	64 bb       	out	0x14, r22	; 20
		break;
 414:	08 95       	ret
		case 'D':
		case 'd':
		DDRD=dir;
 416:	61 bb       	out	0x11, r22	; 17
 418:	08 95       	ret

0000041a <DIO_vwrite_port>:
		break;
	}
}
void DIO_vwrite_port(unsigned char port,unsigned char val)
{
	switch(port)
 41a:	84 34       	cpi	r24, 0x44	; 68
 41c:	d9 f0       	breq	.+54     	; 0x454 <DIO_vwrite_port+0x3a>
 41e:	85 34       	cpi	r24, 0x45	; 69
 420:	38 f4       	brcc	.+14     	; 0x430 <DIO_vwrite_port+0x16>
 422:	82 34       	cpi	r24, 0x42	; 66
 424:	99 f0       	breq	.+38     	; 0x44c <DIO_vwrite_port+0x32>
 426:	83 34       	cpi	r24, 0x43	; 67
 428:	98 f4       	brcc	.+38     	; 0x450 <DIO_vwrite_port+0x36>
 42a:	81 34       	cpi	r24, 0x41	; 65
 42c:	a1 f4       	brne	.+40     	; 0x456 <DIO_vwrite_port+0x3c>
 42e:	0c c0       	rjmp	.+24     	; 0x448 <DIO_vwrite_port+0x2e>
 430:	82 36       	cpi	r24, 0x62	; 98
 432:	61 f0       	breq	.+24     	; 0x44c <DIO_vwrite_port+0x32>
 434:	83 36       	cpi	r24, 0x63	; 99
 436:	18 f4       	brcc	.+6      	; 0x43e <DIO_vwrite_port+0x24>
 438:	81 36       	cpi	r24, 0x61	; 97
 43a:	69 f4       	brne	.+26     	; 0x456 <DIO_vwrite_port+0x3c>
 43c:	05 c0       	rjmp	.+10     	; 0x448 <DIO_vwrite_port+0x2e>
 43e:	83 36       	cpi	r24, 0x63	; 99
 440:	39 f0       	breq	.+14     	; 0x450 <DIO_vwrite_port+0x36>
 442:	84 36       	cpi	r24, 0x64	; 100
 444:	41 f4       	brne	.+16     	; 0x456 <DIO_vwrite_port+0x3c>
 446:	06 c0       	rjmp	.+12     	; 0x454 <DIO_vwrite_port+0x3a>
	{
		case 'A':
		case 'a':
		PORTA=val;
 448:	6b bb       	out	0x1b, r22	; 27
		break;
 44a:	08 95       	ret
		case 'B':
		case 'b':
		PORTB=val;
 44c:	68 bb       	out	0x18, r22	; 24
		break;
 44e:	08 95       	ret
		case 'C':
		case 'c':
		PORTC=val;
 450:	65 bb       	out	0x15, r22	; 21
		break;
 452:	08 95       	ret
		case 'D':
		case 'd':
		PORTD=val;
 454:	62 bb       	out	0x12, r22	; 18
 456:	08 95       	ret

00000458 <DIO_U8read_port>:
	}
}
unsigned char DIO_U8read_port(unsigned char port)
{
	int val;
	switch(port)
 458:	84 34       	cpi	r24, 0x44	; 68
 45a:	e1 f0       	breq	.+56     	; 0x494 <DIO_U8read_port+0x3c>
 45c:	85 34       	cpi	r24, 0x45	; 69
 45e:	38 f4       	brcc	.+14     	; 0x46e <DIO_U8read_port+0x16>
 460:	82 34       	cpi	r24, 0x42	; 66
 462:	a1 f0       	breq	.+40     	; 0x48c <DIO_U8read_port+0x34>
 464:	83 34       	cpi	r24, 0x43	; 67
 466:	a0 f4       	brcc	.+40     	; 0x490 <DIO_U8read_port+0x38>
 468:	81 34       	cpi	r24, 0x41	; 65
 46a:	a9 f4       	brne	.+42     	; 0x496 <DIO_U8read_port+0x3e>
 46c:	0c c0       	rjmp	.+24     	; 0x486 <DIO_U8read_port+0x2e>
 46e:	82 36       	cpi	r24, 0x62	; 98
 470:	69 f0       	breq	.+26     	; 0x48c <DIO_U8read_port+0x34>
 472:	83 36       	cpi	r24, 0x63	; 99
 474:	18 f4       	brcc	.+6      	; 0x47c <DIO_U8read_port+0x24>
 476:	81 36       	cpi	r24, 0x61	; 97
 478:	71 f4       	brne	.+28     	; 0x496 <DIO_U8read_port+0x3e>
 47a:	05 c0       	rjmp	.+10     	; 0x486 <DIO_U8read_port+0x2e>
 47c:	83 36       	cpi	r24, 0x63	; 99
 47e:	41 f0       	breq	.+16     	; 0x490 <DIO_U8read_port+0x38>
 480:	84 36       	cpi	r24, 0x64	; 100
 482:	49 f4       	brne	.+18     	; 0x496 <DIO_U8read_port+0x3e>
 484:	07 c0       	rjmp	.+14     	; 0x494 <DIO_U8read_port+0x3c>
	{
		case 'A':
		case 'a':
		PINA=val;
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	99 bb       	out	0x19, r25	; 25
		break;
 48a:	05 c0       	rjmp	.+10     	; 0x496 <DIO_U8read_port+0x3e>
		case 'B':
		case 'b':
		val=PINB;
 48c:	96 b3       	in	r25, 0x16	; 22
		break;
 48e:	03 c0       	rjmp	.+6      	; 0x496 <DIO_U8read_port+0x3e>
		case 'C':
		case 'c':
		val=PINC;
 490:	93 b3       	in	r25, 0x13	; 19
		break;
 492:	01 c0       	rjmp	.+2      	; 0x496 <DIO_U8read_port+0x3e>
		case 'D':
		case 'd':
		val=PIND;
 494:	90 b3       	in	r25, 0x10	; 16
		break;
	}
	return val;
}
 496:	89 2f       	mov	r24, r25
 498:	08 95       	ret

0000049a <DIO_vtog_port>:
void DIO_vtog_port(unsigned char port)
{
	switch(port)
 49a:	84 34       	cpi	r24, 0x44	; 68
 49c:	09 f1       	breq	.+66     	; 0x4e0 <DIO_vtog_port+0x46>
 49e:	85 34       	cpi	r24, 0x45	; 69
 4a0:	38 f4       	brcc	.+14     	; 0x4b0 <DIO_vtog_port+0x16>
 4a2:	82 34       	cpi	r24, 0x42	; 66
 4a4:	a9 f0       	breq	.+42     	; 0x4d0 <DIO_vtog_port+0x36>
 4a6:	83 34       	cpi	r24, 0x43	; 67
 4a8:	b8 f4       	brcc	.+46     	; 0x4d8 <DIO_vtog_port+0x3e>
 4aa:	81 34       	cpi	r24, 0x41	; 65
 4ac:	e1 f4       	brne	.+56     	; 0x4e6 <DIO_vtog_port+0x4c>
 4ae:	0c c0       	rjmp	.+24     	; 0x4c8 <DIO_vtog_port+0x2e>
 4b0:	82 36       	cpi	r24, 0x62	; 98
 4b2:	71 f0       	breq	.+28     	; 0x4d0 <DIO_vtog_port+0x36>
 4b4:	83 36       	cpi	r24, 0x63	; 99
 4b6:	18 f4       	brcc	.+6      	; 0x4be <DIO_vtog_port+0x24>
 4b8:	81 36       	cpi	r24, 0x61	; 97
 4ba:	a9 f4       	brne	.+42     	; 0x4e6 <DIO_vtog_port+0x4c>
 4bc:	05 c0       	rjmp	.+10     	; 0x4c8 <DIO_vtog_port+0x2e>
 4be:	83 36       	cpi	r24, 0x63	; 99
 4c0:	59 f0       	breq	.+22     	; 0x4d8 <DIO_vtog_port+0x3e>
 4c2:	84 36       	cpi	r24, 0x64	; 100
 4c4:	81 f4       	brne	.+32     	; 0x4e6 <DIO_vtog_port+0x4c>
 4c6:	0c c0       	rjmp	.+24     	; 0x4e0 <DIO_vtog_port+0x46>
	{
		case 'A':
		case 'a':
		PORTA=~PORTA;
 4c8:	8b b3       	in	r24, 0x1b	; 27
 4ca:	80 95       	com	r24
 4cc:	8b bb       	out	0x1b, r24	; 27
		break;
 4ce:	08 95       	ret
		case 'B':
		case 'b':
		PORTB=~PORTB;
 4d0:	88 b3       	in	r24, 0x18	; 24
 4d2:	80 95       	com	r24
 4d4:	88 bb       	out	0x18, r24	; 24
		break;
 4d6:	08 95       	ret
		case 'C':
		case 'c':
		PORTC=~PORTC;
 4d8:	85 b3       	in	r24, 0x15	; 21
 4da:	80 95       	com	r24
 4dc:	85 bb       	out	0x15, r24	; 21
		break;
 4de:	08 95       	ret
		case 'D':
		case 'd':
		PORTD=~PORTD;
 4e0:	82 b3       	in	r24, 0x12	; 18
 4e2:	80 95       	com	r24
 4e4:	82 bb       	out	0x12, r24	; 18
 4e6:	08 95       	ret

000004e8 <DIO_vcontrolpullup>:
		break;
	}
}
void DIO_vcontrolpullup(unsigned char port,unsigned char pin,unsigned char enable)
{
	switch(port)
 4e8:	84 34       	cpi	r24, 0x44	; 68
 4ea:	09 f4       	brne	.+2      	; 0x4ee <DIO_vcontrolpullup+0x6>
 4ec:	71 c0       	rjmp	.+226    	; 0x5d0 <DIO_vcontrolpullup+0xe8>
 4ee:	85 34       	cpi	r24, 0x45	; 69
 4f0:	48 f4       	brcc	.+18     	; 0x504 <DIO_vcontrolpullup+0x1c>
 4f2:	82 34       	cpi	r24, 0x42	; 66
 4f4:	99 f1       	breq	.+102    	; 0x55c <DIO_vcontrolpullup+0x74>
 4f6:	83 34       	cpi	r24, 0x43	; 67
 4f8:	08 f0       	brcs	.+2      	; 0x4fc <DIO_vcontrolpullup+0x14>
 4fa:	4d c0       	rjmp	.+154    	; 0x596 <DIO_vcontrolpullup+0xae>
 4fc:	81 34       	cpi	r24, 0x41	; 65
 4fe:	09 f0       	breq	.+2      	; 0x502 <DIO_vcontrolpullup+0x1a>
 500:	83 c0       	rjmp	.+262    	; 0x608 <DIO_vcontrolpullup+0x120>
 502:	0f c0       	rjmp	.+30     	; 0x522 <DIO_vcontrolpullup+0x3a>
 504:	82 36       	cpi	r24, 0x62	; 98
 506:	51 f1       	breq	.+84     	; 0x55c <DIO_vcontrolpullup+0x74>
 508:	83 36       	cpi	r24, 0x63	; 99
 50a:	20 f4       	brcc	.+8      	; 0x514 <DIO_vcontrolpullup+0x2c>
 50c:	81 36       	cpi	r24, 0x61	; 97
 50e:	09 f0       	breq	.+2      	; 0x512 <DIO_vcontrolpullup+0x2a>
 510:	7b c0       	rjmp	.+246    	; 0x608 <DIO_vcontrolpullup+0x120>
 512:	07 c0       	rjmp	.+14     	; 0x522 <DIO_vcontrolpullup+0x3a>
 514:	83 36       	cpi	r24, 0x63	; 99
 516:	09 f4       	brne	.+2      	; 0x51a <DIO_vcontrolpullup+0x32>
 518:	3e c0       	rjmp	.+124    	; 0x596 <DIO_vcontrolpullup+0xae>
 51a:	84 36       	cpi	r24, 0x64	; 100
 51c:	09 f0       	breq	.+2      	; 0x520 <DIO_vcontrolpullup+0x38>
 51e:	74 c0       	rjmp	.+232    	; 0x608 <DIO_vcontrolpullup+0x120>
 520:	57 c0       	rjmp	.+174    	; 0x5d0 <DIO_vcontrolpullup+0xe8>
	{
		case 'a':
		case 'A':
		if(enable==1)
 522:	41 30       	cpi	r20, 0x01	; 1
 524:	69 f4       	brne	.+26     	; 0x540 <DIO_vcontrolpullup+0x58>
		{
			SET_BIT(PORTA,pin);
 526:	2b b3       	in	r18, 0x1b	; 27
 528:	81 e0       	ldi	r24, 0x01	; 1
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	ac 01       	movw	r20, r24
 52e:	02 c0       	rjmp	.+4      	; 0x534 <DIO_vcontrolpullup+0x4c>
 530:	44 0f       	add	r20, r20
 532:	55 1f       	adc	r21, r21
 534:	6a 95       	dec	r22
 536:	e2 f7       	brpl	.-8      	; 0x530 <DIO_vcontrolpullup+0x48>
 538:	ba 01       	movw	r22, r20
 53a:	62 2b       	or	r22, r18
 53c:	6b bb       	out	0x1b, r22	; 27
 53e:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTA,pin);
 540:	2b b3       	in	r18, 0x1b	; 27
 542:	81 e0       	ldi	r24, 0x01	; 1
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	ac 01       	movw	r20, r24
 548:	02 c0       	rjmp	.+4      	; 0x54e <DIO_vcontrolpullup+0x66>
 54a:	44 0f       	add	r20, r20
 54c:	55 1f       	adc	r21, r21
 54e:	6a 95       	dec	r22
 550:	e2 f7       	brpl	.-8      	; 0x54a <DIO_vcontrolpullup+0x62>
 552:	ba 01       	movw	r22, r20
 554:	60 95       	com	r22
 556:	62 23       	and	r22, r18
 558:	6b bb       	out	0x1b, r22	; 27
 55a:	08 95       	ret
		}
		break;
		case 'b':
		case 'B':
		if(enable==1)
 55c:	41 30       	cpi	r20, 0x01	; 1
 55e:	69 f4       	brne	.+26     	; 0x57a <DIO_vcontrolpullup+0x92>
		{
			SET_BIT(PORTB,pin);
 560:	28 b3       	in	r18, 0x18	; 24
 562:	81 e0       	ldi	r24, 0x01	; 1
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	ac 01       	movw	r20, r24
 568:	02 c0       	rjmp	.+4      	; 0x56e <DIO_vcontrolpullup+0x86>
 56a:	44 0f       	add	r20, r20
 56c:	55 1f       	adc	r21, r21
 56e:	6a 95       	dec	r22
 570:	e2 f7       	brpl	.-8      	; 0x56a <DIO_vcontrolpullup+0x82>
 572:	ba 01       	movw	r22, r20
 574:	62 2b       	or	r22, r18
 576:	68 bb       	out	0x18, r22	; 24
 578:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTB,pin);
 57a:	28 b3       	in	r18, 0x18	; 24
 57c:	81 e0       	ldi	r24, 0x01	; 1
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	ac 01       	movw	r20, r24
 582:	02 c0       	rjmp	.+4      	; 0x588 <DIO_vcontrolpullup+0xa0>
 584:	44 0f       	add	r20, r20
 586:	55 1f       	adc	r21, r21
 588:	6a 95       	dec	r22
 58a:	e2 f7       	brpl	.-8      	; 0x584 <DIO_vcontrolpullup+0x9c>
 58c:	ba 01       	movw	r22, r20
 58e:	60 95       	com	r22
 590:	62 23       	and	r22, r18
 592:	68 bb       	out	0x18, r22	; 24
 594:	08 95       	ret
		}
		break;
		case 'c':
		case 'C':
		if(enable==1)
 596:	41 30       	cpi	r20, 0x01	; 1
 598:	69 f4       	brne	.+26     	; 0x5b4 <DIO_vcontrolpullup+0xcc>
		{
			SET_BIT(PORTC,pin);
 59a:	25 b3       	in	r18, 0x15	; 21
 59c:	81 e0       	ldi	r24, 0x01	; 1
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	ac 01       	movw	r20, r24
 5a2:	02 c0       	rjmp	.+4      	; 0x5a8 <DIO_vcontrolpullup+0xc0>
 5a4:	44 0f       	add	r20, r20
 5a6:	55 1f       	adc	r21, r21
 5a8:	6a 95       	dec	r22
 5aa:	e2 f7       	brpl	.-8      	; 0x5a4 <DIO_vcontrolpullup+0xbc>
 5ac:	ba 01       	movw	r22, r20
 5ae:	62 2b       	or	r22, r18
 5b0:	65 bb       	out	0x15, r22	; 21
 5b2:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTC,pin);
 5b4:	25 b3       	in	r18, 0x15	; 21
 5b6:	81 e0       	ldi	r24, 0x01	; 1
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	ac 01       	movw	r20, r24
 5bc:	02 c0       	rjmp	.+4      	; 0x5c2 <DIO_vcontrolpullup+0xda>
 5be:	44 0f       	add	r20, r20
 5c0:	55 1f       	adc	r21, r21
 5c2:	6a 95       	dec	r22
 5c4:	e2 f7       	brpl	.-8      	; 0x5be <DIO_vcontrolpullup+0xd6>
 5c6:	ba 01       	movw	r22, r20
 5c8:	60 95       	com	r22
 5ca:	62 23       	and	r22, r18
 5cc:	65 bb       	out	0x15, r22	; 21
 5ce:	08 95       	ret
		}
		break;
		case 'd':
		case 'D':
		if(enable==1)
 5d0:	41 30       	cpi	r20, 0x01	; 1
 5d2:	69 f4       	brne	.+26     	; 0x5ee <DIO_vcontrolpullup+0x106>
		{
			SET_BIT(PORTD,pin);
 5d4:	22 b3       	in	r18, 0x12	; 18
 5d6:	81 e0       	ldi	r24, 0x01	; 1
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	ac 01       	movw	r20, r24
 5dc:	02 c0       	rjmp	.+4      	; 0x5e2 <DIO_vcontrolpullup+0xfa>
 5de:	44 0f       	add	r20, r20
 5e0:	55 1f       	adc	r21, r21
 5e2:	6a 95       	dec	r22
 5e4:	e2 f7       	brpl	.-8      	; 0x5de <DIO_vcontrolpullup+0xf6>
 5e6:	ba 01       	movw	r22, r20
 5e8:	62 2b       	or	r22, r18
 5ea:	62 bb       	out	0x12, r22	; 18
 5ec:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTD,pin);
 5ee:	22 b3       	in	r18, 0x12	; 18
 5f0:	81 e0       	ldi	r24, 0x01	; 1
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	ac 01       	movw	r20, r24
 5f6:	02 c0       	rjmp	.+4      	; 0x5fc <DIO_vcontrolpullup+0x114>
 5f8:	44 0f       	add	r20, r20
 5fa:	55 1f       	adc	r21, r21
 5fc:	6a 95       	dec	r22
 5fe:	e2 f7       	brpl	.-8      	; 0x5f8 <DIO_vcontrolpullup+0x110>
 600:	ba 01       	movw	r22, r20
 602:	60 95       	com	r22
 604:	62 23       	and	r22, r18
 606:	62 bb       	out	0x12, r22	; 18
 608:	08 95       	ret

0000060a <sevenseg_vinit_bcd>:
 *  Author: abdel
 */ 
#include "DIO_driver.h"
#include "std_macros.h"
void sevenseg_vinit_bcd(unsigned char port)
{
 60a:	cf 93       	push	r28
 60c:	c8 2f       	mov	r28, r24
	DIO_vset_pindir(port,0,1);
 60e:	60 e0       	ldi	r22, 0x00	; 0
 610:	41 e0       	ldi	r20, 0x01	; 1
 612:	0e 94 60 00 	call	0xc0	; 0xc0 <DIO_vset_pindir>
	DIO_vset_pindir(port,1,1);
 616:	8c 2f       	mov	r24, r28
 618:	61 e0       	ldi	r22, 0x01	; 1
 61a:	41 e0       	ldi	r20, 0x01	; 1
 61c:	0e 94 60 00 	call	0xc0	; 0xc0 <DIO_vset_pindir>
	DIO_vset_pindir(port,2,1);
 620:	8c 2f       	mov	r24, r28
 622:	62 e0       	ldi	r22, 0x02	; 2
 624:	41 e0       	ldi	r20, 0x01	; 1
 626:	0e 94 60 00 	call	0xc0	; 0xc0 <DIO_vset_pindir>
	DIO_vset_pindir(port,3,1);
 62a:	8c 2f       	mov	r24, r28
 62c:	63 e0       	ldi	r22, 0x03	; 3
 62e:	41 e0       	ldi	r20, 0x01	; 1
 630:	0e 94 60 00 	call	0xc0	; 0xc0 <DIO_vset_pindir>
}
 634:	cf 91       	pop	r28
 636:	08 95       	ret

00000638 <sevenseg_vwrite_bcd>:
void sevenseg_vwrite_bcd(unsigned char port,unsigned char number)
{
 638:	0f 93       	push	r16
 63a:	1f 93       	push	r17
 63c:	cf 93       	push	r28
 63e:	c8 2f       	mov	r28, r24
 640:	06 2f       	mov	r16, r22
	DIO_vwrite_pin(port,0,READ_BIT(number,0));
 642:	46 2f       	mov	r20, r22
 644:	41 70       	andi	r20, 0x01	; 1
 646:	60 e0       	ldi	r22, 0x00	; 0
 648:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <DIO_vwrite_pin>
	DIO_vwrite_pin(port,1,READ_BIT(number,1));
 64c:	10 e0       	ldi	r17, 0x00	; 0
 64e:	a8 01       	movw	r20, r16
 650:	42 70       	andi	r20, 0x02	; 2
 652:	50 70       	andi	r21, 0x00	; 0
 654:	55 95       	asr	r21
 656:	47 95       	ror	r20
 658:	8c 2f       	mov	r24, r28
 65a:	61 e0       	ldi	r22, 0x01	; 1
 65c:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <DIO_vwrite_pin>
	DIO_vwrite_pin(port,2,READ_BIT(number,2));
 660:	a8 01       	movw	r20, r16
 662:	44 70       	andi	r20, 0x04	; 4
 664:	50 70       	andi	r21, 0x00	; 0
 666:	55 95       	asr	r21
 668:	47 95       	ror	r20
 66a:	55 95       	asr	r21
 66c:	47 95       	ror	r20
 66e:	8c 2f       	mov	r24, r28
 670:	62 e0       	ldi	r22, 0x02	; 2
 672:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <DIO_vwrite_pin>
	DIO_vwrite_pin(port,3,READ_BIT(number,3));
 676:	08 70       	andi	r16, 0x08	; 8
 678:	10 70       	andi	r17, 0x00	; 0
 67a:	a8 01       	movw	r20, r16
 67c:	55 95       	asr	r21
 67e:	47 95       	ror	r20
 680:	55 95       	asr	r21
 682:	47 95       	ror	r20
 684:	55 95       	asr	r21
 686:	47 95       	ror	r20
 688:	8c 2f       	mov	r24, r28
 68a:	63 e0       	ldi	r22, 0x03	; 3
 68c:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <DIO_vwrite_pin>
 690:	cf 91       	pop	r28
 692:	1f 91       	pop	r17
 694:	0f 91       	pop	r16
 696:	08 95       	ret

00000698 <_exit>:
 698:	f8 94       	cli

0000069a <__stop_program>:
 69a:	ff cf       	rjmp	.-2      	; 0x69a <__stop_program>
