
control pullup.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000648  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000648  000006bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  000006bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00000d88  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000000e0  00000000  00000000  00000e10  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007aa  00000000  00000000  00000ef0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000249  00000000  00000000  0000169a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003c1  00000000  00000000  000018e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000160  00000000  00000000  00001ca4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000205  00000000  00000000  00001e04  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000581  00000000  00000000  00002009  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e4       	ldi	r30, 0x48	; 72
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 22 03 	jmp	0x644	; 0x644 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include "LED_driver.h"
#include "pushbutton_driver.h"
int main(void)
{
	char z;
	DIO_vcontrolpullup('a',0,1);
  92:	81 e6       	ldi	r24, 0x61	; 97
  94:	60 e0       	ldi	r22, 0x00	; 0
  96:	41 e0       	ldi	r20, 0x01	; 1
  98:	0e 94 78 02 	call	0x4f0	; 0x4f0 <DIO_vcontrolpullup>
	pushbutton_vinit('a',0);
  9c:	81 e6       	ldi	r24, 0x61	; 97
  9e:	60 e0       	ldi	r22, 0x00	; 0
  a0:	0e 94 1b 03 	call	0x636	; 0x636 <pushbutton_vinit>
	LED_vinit('a',1);
  a4:	81 e6       	ldi	r24, 0x61	; 97
  a6:	61 e0       	ldi	r22, 0x01	; 1
  a8:	0e 94 09 03 	call	0x612	; 0x612 <LED_vinit>
    while(1)
    {
		z=pushbutton_u8read('a',0);
  ac:	81 e6       	ldi	r24, 0x61	; 97
  ae:	60 e0       	ldi	r22, 0x00	; 0
  b0:	0e 94 1f 03 	call	0x63e	; 0x63e <pushbutton_u8read>
		if(z==0)
  b4:	88 23       	and	r24, r24
  b6:	29 f4       	brne	.+10     	; 0xc2 <main+0x30>
		{
			LED_von('a',1);
  b8:	81 e6       	ldi	r24, 0x61	; 97
  ba:	61 e0       	ldi	r22, 0x01	; 1
  bc:	0e 94 0d 03 	call	0x61a	; 0x61a <LED_von>
  c0:	f5 cf       	rjmp	.-22     	; 0xac <main+0x1a>
		}
		else
		{
			LED_voff('a',1);
  c2:	81 e6       	ldi	r24, 0x61	; 97
  c4:	61 e0       	ldi	r22, 0x01	; 1
  c6:	0e 94 11 03 	call	0x622	; 0x622 <LED_voff>
  ca:	f0 cf       	rjmp	.-32     	; 0xac <main+0x1a>

000000cc <DIO_vset_pindir>:
#include <avr/io.h>
#include "std_macros.h"
void DIO_vset_pindir(unsigned char port,unsigned char pin,unsigned char dir)
{
switch(port)
  cc:	84 34       	cpi	r24, 0x44	; 68
  ce:	09 f4       	brne	.+2      	; 0xd2 <DIO_vset_pindir+0x6>
  d0:	71 c0       	rjmp	.+226    	; 0x1b4 <DIO_vset_pindir+0xe8>
  d2:	85 34       	cpi	r24, 0x45	; 69
  d4:	48 f4       	brcc	.+18     	; 0xe8 <DIO_vset_pindir+0x1c>
  d6:	82 34       	cpi	r24, 0x42	; 66
  d8:	99 f1       	breq	.+102    	; 0x140 <DIO_vset_pindir+0x74>
  da:	83 34       	cpi	r24, 0x43	; 67
  dc:	08 f0       	brcs	.+2      	; 0xe0 <DIO_vset_pindir+0x14>
  de:	4d c0       	rjmp	.+154    	; 0x17a <DIO_vset_pindir+0xae>
  e0:	81 34       	cpi	r24, 0x41	; 65
  e2:	09 f0       	breq	.+2      	; 0xe6 <DIO_vset_pindir+0x1a>
  e4:	83 c0       	rjmp	.+262    	; 0x1ec <DIO_vset_pindir+0x120>
  e6:	0f c0       	rjmp	.+30     	; 0x106 <DIO_vset_pindir+0x3a>
  e8:	82 36       	cpi	r24, 0x62	; 98
  ea:	51 f1       	breq	.+84     	; 0x140 <DIO_vset_pindir+0x74>
  ec:	83 36       	cpi	r24, 0x63	; 99
  ee:	20 f4       	brcc	.+8      	; 0xf8 <DIO_vset_pindir+0x2c>
  f0:	81 36       	cpi	r24, 0x61	; 97
  f2:	09 f0       	breq	.+2      	; 0xf6 <DIO_vset_pindir+0x2a>
  f4:	7b c0       	rjmp	.+246    	; 0x1ec <DIO_vset_pindir+0x120>
  f6:	07 c0       	rjmp	.+14     	; 0x106 <DIO_vset_pindir+0x3a>
  f8:	83 36       	cpi	r24, 0x63	; 99
  fa:	09 f4       	brne	.+2      	; 0xfe <DIO_vset_pindir+0x32>
  fc:	3e c0       	rjmp	.+124    	; 0x17a <DIO_vset_pindir+0xae>
  fe:	84 36       	cpi	r24, 0x64	; 100
 100:	09 f0       	breq	.+2      	; 0x104 <DIO_vset_pindir+0x38>
 102:	74 c0       	rjmp	.+232    	; 0x1ec <DIO_vset_pindir+0x120>
 104:	57 c0       	rjmp	.+174    	; 0x1b4 <DIO_vset_pindir+0xe8>
{
	case 'A':
	case 'a':
	if(dir==1)
 106:	41 30       	cpi	r20, 0x01	; 1
 108:	69 f4       	brne	.+26     	; 0x124 <DIO_vset_pindir+0x58>
	{
		SET_BIT(DDRA,pin);
 10a:	2a b3       	in	r18, 0x1a	; 26
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	ac 01       	movw	r20, r24
 112:	02 c0       	rjmp	.+4      	; 0x118 <DIO_vset_pindir+0x4c>
 114:	44 0f       	add	r20, r20
 116:	55 1f       	adc	r21, r21
 118:	6a 95       	dec	r22
 11a:	e2 f7       	brpl	.-8      	; 0x114 <DIO_vset_pindir+0x48>
 11c:	ba 01       	movw	r22, r20
 11e:	62 2b       	or	r22, r18
 120:	6a bb       	out	0x1a, r22	; 26
 122:	08 95       	ret
	} 
	else
	{
		CLR_BIT(DDRA,pin);
 124:	2a b3       	in	r18, 0x1a	; 26
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	ac 01       	movw	r20, r24
 12c:	02 c0       	rjmp	.+4      	; 0x132 <DIO_vset_pindir+0x66>
 12e:	44 0f       	add	r20, r20
 130:	55 1f       	adc	r21, r21
 132:	6a 95       	dec	r22
 134:	e2 f7       	brpl	.-8      	; 0x12e <DIO_vset_pindir+0x62>
 136:	ba 01       	movw	r22, r20
 138:	60 95       	com	r22
 13a:	62 23       	and	r22, r18
 13c:	6a bb       	out	0x1a, r22	; 26
 13e:	08 95       	ret
	}
	break;
	case 'B':
	case 'b':
	if(dir==1)
 140:	41 30       	cpi	r20, 0x01	; 1
 142:	69 f4       	brne	.+26     	; 0x15e <DIO_vset_pindir+0x92>
	{
		SET_BIT(DDRB,pin);
 144:	27 b3       	in	r18, 0x17	; 23
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	ac 01       	movw	r20, r24
 14c:	02 c0       	rjmp	.+4      	; 0x152 <DIO_vset_pindir+0x86>
 14e:	44 0f       	add	r20, r20
 150:	55 1f       	adc	r21, r21
 152:	6a 95       	dec	r22
 154:	e2 f7       	brpl	.-8      	; 0x14e <DIO_vset_pindir+0x82>
 156:	ba 01       	movw	r22, r20
 158:	62 2b       	or	r22, r18
 15a:	67 bb       	out	0x17, r22	; 23
 15c:	08 95       	ret
	}
	else
	{
		CLR_BIT(DDRB,pin);
 15e:	27 b3       	in	r18, 0x17	; 23
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	ac 01       	movw	r20, r24
 166:	02 c0       	rjmp	.+4      	; 0x16c <DIO_vset_pindir+0xa0>
 168:	44 0f       	add	r20, r20
 16a:	55 1f       	adc	r21, r21
 16c:	6a 95       	dec	r22
 16e:	e2 f7       	brpl	.-8      	; 0x168 <DIO_vset_pindir+0x9c>
 170:	ba 01       	movw	r22, r20
 172:	60 95       	com	r22
 174:	62 23       	and	r22, r18
 176:	67 bb       	out	0x17, r22	; 23
 178:	08 95       	ret
	}
	break;
	case 'C':
	case 'c':
	if(dir==1)
 17a:	41 30       	cpi	r20, 0x01	; 1
 17c:	69 f4       	brne	.+26     	; 0x198 <DIO_vset_pindir+0xcc>
	{
		SET_BIT(DDRC,pin);
 17e:	24 b3       	in	r18, 0x14	; 20
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	ac 01       	movw	r20, r24
 186:	02 c0       	rjmp	.+4      	; 0x18c <DIO_vset_pindir+0xc0>
 188:	44 0f       	add	r20, r20
 18a:	55 1f       	adc	r21, r21
 18c:	6a 95       	dec	r22
 18e:	e2 f7       	brpl	.-8      	; 0x188 <DIO_vset_pindir+0xbc>
 190:	ba 01       	movw	r22, r20
 192:	62 2b       	or	r22, r18
 194:	64 bb       	out	0x14, r22	; 20
 196:	08 95       	ret
	}
	else
	{
		CLR_BIT(DDRC,pin);
 198:	24 b3       	in	r18, 0x14	; 20
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	ac 01       	movw	r20, r24
 1a0:	02 c0       	rjmp	.+4      	; 0x1a6 <DIO_vset_pindir+0xda>
 1a2:	44 0f       	add	r20, r20
 1a4:	55 1f       	adc	r21, r21
 1a6:	6a 95       	dec	r22
 1a8:	e2 f7       	brpl	.-8      	; 0x1a2 <DIO_vset_pindir+0xd6>
 1aa:	ba 01       	movw	r22, r20
 1ac:	60 95       	com	r22
 1ae:	62 23       	and	r22, r18
 1b0:	64 bb       	out	0x14, r22	; 20
 1b2:	08 95       	ret
	}
	break;
	case 'D':
	case 'd':
	if(dir==1)
 1b4:	41 30       	cpi	r20, 0x01	; 1
 1b6:	69 f4       	brne	.+26     	; 0x1d2 <DIO_vset_pindir+0x106>
	{
		SET_BIT(DDRD,pin);
 1b8:	21 b3       	in	r18, 0x11	; 17
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	ac 01       	movw	r20, r24
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <DIO_vset_pindir+0xfa>
 1c2:	44 0f       	add	r20, r20
 1c4:	55 1f       	adc	r21, r21
 1c6:	6a 95       	dec	r22
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <DIO_vset_pindir+0xf6>
 1ca:	ba 01       	movw	r22, r20
 1cc:	62 2b       	or	r22, r18
 1ce:	61 bb       	out	0x11, r22	; 17
 1d0:	08 95       	ret
	}
	else
	{
		CLR_BIT(DDRD,pin);
 1d2:	21 b3       	in	r18, 0x11	; 17
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	ac 01       	movw	r20, r24
 1da:	02 c0       	rjmp	.+4      	; 0x1e0 <DIO_vset_pindir+0x114>
 1dc:	44 0f       	add	r20, r20
 1de:	55 1f       	adc	r21, r21
 1e0:	6a 95       	dec	r22
 1e2:	e2 f7       	brpl	.-8      	; 0x1dc <DIO_vset_pindir+0x110>
 1e4:	ba 01       	movw	r22, r20
 1e6:	60 95       	com	r22
 1e8:	62 23       	and	r22, r18
 1ea:	61 bb       	out	0x11, r22	; 17
 1ec:	08 95       	ret

000001ee <DIO_vwrite_pin>:
	}
	break;
}}
void DIO_vwrite_pin(unsigned char port,unsigned char pin,unsigned char val)
{
	switch(port)
 1ee:	84 34       	cpi	r24, 0x44	; 68
 1f0:	09 f4       	brne	.+2      	; 0x1f4 <DIO_vwrite_pin+0x6>
 1f2:	71 c0       	rjmp	.+226    	; 0x2d6 <DIO_vwrite_pin+0xe8>
 1f4:	85 34       	cpi	r24, 0x45	; 69
 1f6:	48 f4       	brcc	.+18     	; 0x20a <DIO_vwrite_pin+0x1c>
 1f8:	82 34       	cpi	r24, 0x42	; 66
 1fa:	99 f1       	breq	.+102    	; 0x262 <DIO_vwrite_pin+0x74>
 1fc:	83 34       	cpi	r24, 0x43	; 67
 1fe:	08 f0       	brcs	.+2      	; 0x202 <DIO_vwrite_pin+0x14>
 200:	4d c0       	rjmp	.+154    	; 0x29c <DIO_vwrite_pin+0xae>
 202:	81 34       	cpi	r24, 0x41	; 65
 204:	09 f0       	breq	.+2      	; 0x208 <DIO_vwrite_pin+0x1a>
 206:	83 c0       	rjmp	.+262    	; 0x30e <DIO_vwrite_pin+0x120>
 208:	0f c0       	rjmp	.+30     	; 0x228 <DIO_vwrite_pin+0x3a>
 20a:	82 36       	cpi	r24, 0x62	; 98
 20c:	51 f1       	breq	.+84     	; 0x262 <DIO_vwrite_pin+0x74>
 20e:	83 36       	cpi	r24, 0x63	; 99
 210:	20 f4       	brcc	.+8      	; 0x21a <DIO_vwrite_pin+0x2c>
 212:	81 36       	cpi	r24, 0x61	; 97
 214:	09 f0       	breq	.+2      	; 0x218 <DIO_vwrite_pin+0x2a>
 216:	7b c0       	rjmp	.+246    	; 0x30e <DIO_vwrite_pin+0x120>
 218:	07 c0       	rjmp	.+14     	; 0x228 <DIO_vwrite_pin+0x3a>
 21a:	83 36       	cpi	r24, 0x63	; 99
 21c:	09 f4       	brne	.+2      	; 0x220 <DIO_vwrite_pin+0x32>
 21e:	3e c0       	rjmp	.+124    	; 0x29c <DIO_vwrite_pin+0xae>
 220:	84 36       	cpi	r24, 0x64	; 100
 222:	09 f0       	breq	.+2      	; 0x226 <DIO_vwrite_pin+0x38>
 224:	74 c0       	rjmp	.+232    	; 0x30e <DIO_vwrite_pin+0x120>
 226:	57 c0       	rjmp	.+174    	; 0x2d6 <DIO_vwrite_pin+0xe8>
	{
		case 'A':
		case 'a':
		if(val==1)
 228:	41 30       	cpi	r20, 0x01	; 1
 22a:	69 f4       	brne	.+26     	; 0x246 <DIO_vwrite_pin+0x58>
		{
			SET_BIT(PORTA,pin);
 22c:	2b b3       	in	r18, 0x1b	; 27
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	ac 01       	movw	r20, r24
 234:	02 c0       	rjmp	.+4      	; 0x23a <DIO_vwrite_pin+0x4c>
 236:	44 0f       	add	r20, r20
 238:	55 1f       	adc	r21, r21
 23a:	6a 95       	dec	r22
 23c:	e2 f7       	brpl	.-8      	; 0x236 <DIO_vwrite_pin+0x48>
 23e:	ba 01       	movw	r22, r20
 240:	62 2b       	or	r22, r18
 242:	6b bb       	out	0x1b, r22	; 27
 244:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTA,pin);
 246:	2b b3       	in	r18, 0x1b	; 27
 248:	81 e0       	ldi	r24, 0x01	; 1
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	ac 01       	movw	r20, r24
 24e:	02 c0       	rjmp	.+4      	; 0x254 <DIO_vwrite_pin+0x66>
 250:	44 0f       	add	r20, r20
 252:	55 1f       	adc	r21, r21
 254:	6a 95       	dec	r22
 256:	e2 f7       	brpl	.-8      	; 0x250 <DIO_vwrite_pin+0x62>
 258:	ba 01       	movw	r22, r20
 25a:	60 95       	com	r22
 25c:	62 23       	and	r22, r18
 25e:	6b bb       	out	0x1b, r22	; 27
 260:	08 95       	ret
		}
		break;
		case 'B':
		case 'b':
		if(val==1)
 262:	41 30       	cpi	r20, 0x01	; 1
 264:	69 f4       	brne	.+26     	; 0x280 <DIO_vwrite_pin+0x92>
		{
			SET_BIT(PORTB,pin);
 266:	28 b3       	in	r18, 0x18	; 24
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	ac 01       	movw	r20, r24
 26e:	02 c0       	rjmp	.+4      	; 0x274 <DIO_vwrite_pin+0x86>
 270:	44 0f       	add	r20, r20
 272:	55 1f       	adc	r21, r21
 274:	6a 95       	dec	r22
 276:	e2 f7       	brpl	.-8      	; 0x270 <DIO_vwrite_pin+0x82>
 278:	ba 01       	movw	r22, r20
 27a:	62 2b       	or	r22, r18
 27c:	68 bb       	out	0x18, r22	; 24
 27e:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTB,pin);
 280:	28 b3       	in	r18, 0x18	; 24
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	ac 01       	movw	r20, r24
 288:	02 c0       	rjmp	.+4      	; 0x28e <DIO_vwrite_pin+0xa0>
 28a:	44 0f       	add	r20, r20
 28c:	55 1f       	adc	r21, r21
 28e:	6a 95       	dec	r22
 290:	e2 f7       	brpl	.-8      	; 0x28a <DIO_vwrite_pin+0x9c>
 292:	ba 01       	movw	r22, r20
 294:	60 95       	com	r22
 296:	62 23       	and	r22, r18
 298:	68 bb       	out	0x18, r22	; 24
 29a:	08 95       	ret
		}
		break;
		case 'C':
		case 'c':
		if(val==1)
 29c:	41 30       	cpi	r20, 0x01	; 1
 29e:	69 f4       	brne	.+26     	; 0x2ba <DIO_vwrite_pin+0xcc>
		{
			SET_BIT(PORTC,pin);
 2a0:	25 b3       	in	r18, 0x15	; 21
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	ac 01       	movw	r20, r24
 2a8:	02 c0       	rjmp	.+4      	; 0x2ae <DIO_vwrite_pin+0xc0>
 2aa:	44 0f       	add	r20, r20
 2ac:	55 1f       	adc	r21, r21
 2ae:	6a 95       	dec	r22
 2b0:	e2 f7       	brpl	.-8      	; 0x2aa <DIO_vwrite_pin+0xbc>
 2b2:	ba 01       	movw	r22, r20
 2b4:	62 2b       	or	r22, r18
 2b6:	65 bb       	out	0x15, r22	; 21
 2b8:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTC,pin);
 2ba:	25 b3       	in	r18, 0x15	; 21
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	ac 01       	movw	r20, r24
 2c2:	02 c0       	rjmp	.+4      	; 0x2c8 <DIO_vwrite_pin+0xda>
 2c4:	44 0f       	add	r20, r20
 2c6:	55 1f       	adc	r21, r21
 2c8:	6a 95       	dec	r22
 2ca:	e2 f7       	brpl	.-8      	; 0x2c4 <DIO_vwrite_pin+0xd6>
 2cc:	ba 01       	movw	r22, r20
 2ce:	60 95       	com	r22
 2d0:	62 23       	and	r22, r18
 2d2:	65 bb       	out	0x15, r22	; 21
 2d4:	08 95       	ret
		}
		break;
		case 'D':
		case 'd':
		if(val==1)
 2d6:	41 30       	cpi	r20, 0x01	; 1
 2d8:	69 f4       	brne	.+26     	; 0x2f4 <DIO_vwrite_pin+0x106>
		{
			SET_BIT(PORTD,pin);
 2da:	22 b3       	in	r18, 0x12	; 18
 2dc:	81 e0       	ldi	r24, 0x01	; 1
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	ac 01       	movw	r20, r24
 2e2:	02 c0       	rjmp	.+4      	; 0x2e8 <DIO_vwrite_pin+0xfa>
 2e4:	44 0f       	add	r20, r20
 2e6:	55 1f       	adc	r21, r21
 2e8:	6a 95       	dec	r22
 2ea:	e2 f7       	brpl	.-8      	; 0x2e4 <DIO_vwrite_pin+0xf6>
 2ec:	ba 01       	movw	r22, r20
 2ee:	62 2b       	or	r22, r18
 2f0:	62 bb       	out	0x12, r22	; 18
 2f2:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTD,pin);
 2f4:	22 b3       	in	r18, 0x12	; 18
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	ac 01       	movw	r20, r24
 2fc:	02 c0       	rjmp	.+4      	; 0x302 <DIO_vwrite_pin+0x114>
 2fe:	44 0f       	add	r20, r20
 300:	55 1f       	adc	r21, r21
 302:	6a 95       	dec	r22
 304:	e2 f7       	brpl	.-8      	; 0x2fe <DIO_vwrite_pin+0x110>
 306:	ba 01       	movw	r22, r20
 308:	60 95       	com	r22
 30a:	62 23       	and	r22, r18
 30c:	62 bb       	out	0x12, r22	; 18
 30e:	08 95       	ret

00000310 <DIO_U8read_pin>:
		break;
	}}
unsigned char DIO_U8read_pin(unsigned char port,unsigned char pin)
{
	unsigned char value;
	switch(port)
 310:	84 34       	cpi	r24, 0x44	; 68
 312:	d9 f0       	breq	.+54     	; 0x34a <DIO_U8read_pin+0x3a>
 314:	85 34       	cpi	r24, 0x45	; 69
 316:	38 f4       	brcc	.+14     	; 0x326 <DIO_U8read_pin+0x16>
 318:	82 34       	cpi	r24, 0x42	; 66
 31a:	99 f0       	breq	.+38     	; 0x342 <DIO_U8read_pin+0x32>
 31c:	83 34       	cpi	r24, 0x43	; 67
 31e:	98 f4       	brcc	.+38     	; 0x346 <DIO_U8read_pin+0x36>
 320:	81 34       	cpi	r24, 0x41	; 65
 322:	a1 f4       	brne	.+40     	; 0x34c <DIO_U8read_pin+0x3c>
 324:	0c c0       	rjmp	.+24     	; 0x33e <DIO_U8read_pin+0x2e>
 326:	82 36       	cpi	r24, 0x62	; 98
 328:	61 f0       	breq	.+24     	; 0x342 <DIO_U8read_pin+0x32>
 32a:	83 36       	cpi	r24, 0x63	; 99
 32c:	18 f4       	brcc	.+6      	; 0x334 <DIO_U8read_pin+0x24>
 32e:	81 36       	cpi	r24, 0x61	; 97
 330:	69 f4       	brne	.+26     	; 0x34c <DIO_U8read_pin+0x3c>
 332:	05 c0       	rjmp	.+10     	; 0x33e <DIO_U8read_pin+0x2e>
 334:	83 36       	cpi	r24, 0x63	; 99
 336:	39 f0       	breq	.+14     	; 0x346 <DIO_U8read_pin+0x36>
 338:	84 36       	cpi	r24, 0x64	; 100
 33a:	41 f4       	brne	.+16     	; 0x34c <DIO_U8read_pin+0x3c>
 33c:	06 c0       	rjmp	.+12     	; 0x34a <DIO_U8read_pin+0x3a>
	{
		case 'A':
		case 'a':
			value=READ_BIT(PINA,pin);
 33e:	89 b3       	in	r24, 0x19	; 25
			break;
 340:	08 95       	ret
		case 'B':
		case 'b':
			value=READ_BIT(PINB,pin);
 342:	86 b3       	in	r24, 0x16	; 22
			break;
 344:	08 95       	ret
		case 'C':
		case 'c':
			value=READ_BIT(PINC,pin);
 346:	83 b3       	in	r24, 0x13	; 19
			break;
 348:	08 95       	ret
		case 'D':
		case 'd':
			value=READ_BIT(PIND,pin);
 34a:	80 b3       	in	r24, 0x10	; 16
			break;
	}
} 
 34c:	08 95       	ret

0000034e <DIO_vtoggle>:
void DIO_vtoggle(unsigned char port,unsigned char pin)
{
switch(port)
 34e:	84 34       	cpi	r24, 0x44	; 68
 350:	09 f4       	brne	.+2      	; 0x354 <DIO_vtoggle+0x6>
 352:	3d c0       	rjmp	.+122    	; 0x3ce <DIO_vtoggle+0x80>
 354:	85 34       	cpi	r24, 0x45	; 69
 356:	40 f4       	brcc	.+16     	; 0x368 <DIO_vtoggle+0x1a>
 358:	82 34       	cpi	r24, 0x42	; 66
 35a:	f9 f0       	breq	.+62     	; 0x39a <DIO_vtoggle+0x4c>
 35c:	83 34       	cpi	r24, 0x43	; 67
 35e:	50 f5       	brcc	.+84     	; 0x3b4 <DIO_vtoggle+0x66>
 360:	81 34       	cpi	r24, 0x41	; 65
 362:	09 f0       	breq	.+2      	; 0x366 <DIO_vtoggle+0x18>
 364:	40 c0       	rjmp	.+128    	; 0x3e6 <DIO_vtoggle+0x98>
 366:	0c c0       	rjmp	.+24     	; 0x380 <DIO_vtoggle+0x32>
 368:	82 36       	cpi	r24, 0x62	; 98
 36a:	b9 f0       	breq	.+46     	; 0x39a <DIO_vtoggle+0x4c>
 36c:	83 36       	cpi	r24, 0x63	; 99
 36e:	18 f4       	brcc	.+6      	; 0x376 <DIO_vtoggle+0x28>
 370:	81 36       	cpi	r24, 0x61	; 97
 372:	c9 f5       	brne	.+114    	; 0x3e6 <DIO_vtoggle+0x98>
 374:	05 c0       	rjmp	.+10     	; 0x380 <DIO_vtoggle+0x32>
 376:	83 36       	cpi	r24, 0x63	; 99
 378:	e9 f0       	breq	.+58     	; 0x3b4 <DIO_vtoggle+0x66>
 37a:	84 36       	cpi	r24, 0x64	; 100
 37c:	a1 f5       	brne	.+104    	; 0x3e6 <DIO_vtoggle+0x98>
 37e:	27 c0       	rjmp	.+78     	; 0x3ce <DIO_vtoggle+0x80>
{
	case 'A':
	case 'a':
		TOG_BIT(PORTA,pin);
 380:	2b b3       	in	r18, 0x1b	; 27
 382:	81 e0       	ldi	r24, 0x01	; 1
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	ac 01       	movw	r20, r24
 388:	02 c0       	rjmp	.+4      	; 0x38e <DIO_vtoggle+0x40>
 38a:	44 0f       	add	r20, r20
 38c:	55 1f       	adc	r21, r21
 38e:	6a 95       	dec	r22
 390:	e2 f7       	brpl	.-8      	; 0x38a <DIO_vtoggle+0x3c>
 392:	ba 01       	movw	r22, r20
 394:	62 27       	eor	r22, r18
 396:	6b bb       	out	0x1b, r22	; 27
		break;
 398:	08 95       	ret
	case 'B':
	case 'b':
		TOG_BIT(PORTB,pin);
 39a:	28 b3       	in	r18, 0x18	; 24
 39c:	81 e0       	ldi	r24, 0x01	; 1
 39e:	90 e0       	ldi	r25, 0x00	; 0
 3a0:	ac 01       	movw	r20, r24
 3a2:	02 c0       	rjmp	.+4      	; 0x3a8 <DIO_vtoggle+0x5a>
 3a4:	44 0f       	add	r20, r20
 3a6:	55 1f       	adc	r21, r21
 3a8:	6a 95       	dec	r22
 3aa:	e2 f7       	brpl	.-8      	; 0x3a4 <DIO_vtoggle+0x56>
 3ac:	ba 01       	movw	r22, r20
 3ae:	62 27       	eor	r22, r18
 3b0:	68 bb       	out	0x18, r22	; 24
		break;
 3b2:	08 95       	ret
	case 'C':
	case 'c':
		TOG_BIT(PORTC,pin);
 3b4:	25 b3       	in	r18, 0x15	; 21
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	ac 01       	movw	r20, r24
 3bc:	02 c0       	rjmp	.+4      	; 0x3c2 <DIO_vtoggle+0x74>
 3be:	44 0f       	add	r20, r20
 3c0:	55 1f       	adc	r21, r21
 3c2:	6a 95       	dec	r22
 3c4:	e2 f7       	brpl	.-8      	; 0x3be <DIO_vtoggle+0x70>
 3c6:	ba 01       	movw	r22, r20
 3c8:	62 27       	eor	r22, r18
 3ca:	65 bb       	out	0x15, r22	; 21
		break;
 3cc:	08 95       	ret
	case 'D':
	case 'd':
		TOG_BIT(PORTD,pin);
 3ce:	22 b3       	in	r18, 0x12	; 18
 3d0:	81 e0       	ldi	r24, 0x01	; 1
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	ac 01       	movw	r20, r24
 3d6:	02 c0       	rjmp	.+4      	; 0x3dc <DIO_vtoggle+0x8e>
 3d8:	44 0f       	add	r20, r20
 3da:	55 1f       	adc	r21, r21
 3dc:	6a 95       	dec	r22
 3de:	e2 f7       	brpl	.-8      	; 0x3d8 <DIO_vtoggle+0x8a>
 3e0:	ba 01       	movw	r22, r20
 3e2:	62 27       	eor	r22, r18
 3e4:	62 bb       	out	0x12, r22	; 18
 3e6:	08 95       	ret

000003e8 <DIO_vset_portdir>:
		break;
	}
}
void DIO_vset_portdir(unsigned char port,unsigned char dir)
{
	switch(port)
 3e8:	84 34       	cpi	r24, 0x44	; 68
 3ea:	d9 f0       	breq	.+54     	; 0x422 <DIO_vset_portdir+0x3a>
 3ec:	85 34       	cpi	r24, 0x45	; 69
 3ee:	38 f4       	brcc	.+14     	; 0x3fe <DIO_vset_portdir+0x16>
 3f0:	82 34       	cpi	r24, 0x42	; 66
 3f2:	99 f0       	breq	.+38     	; 0x41a <DIO_vset_portdir+0x32>
 3f4:	83 34       	cpi	r24, 0x43	; 67
 3f6:	98 f4       	brcc	.+38     	; 0x41e <DIO_vset_portdir+0x36>
 3f8:	81 34       	cpi	r24, 0x41	; 65
 3fa:	a1 f4       	brne	.+40     	; 0x424 <DIO_vset_portdir+0x3c>
 3fc:	0c c0       	rjmp	.+24     	; 0x416 <DIO_vset_portdir+0x2e>
 3fe:	82 36       	cpi	r24, 0x62	; 98
 400:	61 f0       	breq	.+24     	; 0x41a <DIO_vset_portdir+0x32>
 402:	83 36       	cpi	r24, 0x63	; 99
 404:	18 f4       	brcc	.+6      	; 0x40c <DIO_vset_portdir+0x24>
 406:	81 36       	cpi	r24, 0x61	; 97
 408:	69 f4       	brne	.+26     	; 0x424 <DIO_vset_portdir+0x3c>
 40a:	05 c0       	rjmp	.+10     	; 0x416 <DIO_vset_portdir+0x2e>
 40c:	83 36       	cpi	r24, 0x63	; 99
 40e:	39 f0       	breq	.+14     	; 0x41e <DIO_vset_portdir+0x36>
 410:	84 36       	cpi	r24, 0x64	; 100
 412:	41 f4       	brne	.+16     	; 0x424 <DIO_vset_portdir+0x3c>
 414:	06 c0       	rjmp	.+12     	; 0x422 <DIO_vset_portdir+0x3a>
	{
		case 'A':
		case 'a':
		DDRA=dir;
 416:	6a bb       	out	0x1a, r22	; 26
		break;
 418:	08 95       	ret
		case 'B':
		case 'b':
		DDRB=dir;
 41a:	67 bb       	out	0x17, r22	; 23
		break;
 41c:	08 95       	ret
		case 'C':
		case 'c':
		DDRC=dir;
 41e:	64 bb       	out	0x14, r22	; 20
		break;
 420:	08 95       	ret
		case 'D':
		case 'd':
		DDRD=dir;
 422:	61 bb       	out	0x11, r22	; 17
 424:	08 95       	ret

00000426 <DIO_vwrite_port>:
		break;
	}
}
void DIO_vwrite_port(unsigned char port,unsigned char val)
{
	switch(port)
 426:	84 34       	cpi	r24, 0x44	; 68
 428:	d9 f0       	breq	.+54     	; 0x460 <DIO_vwrite_port+0x3a>
 42a:	85 34       	cpi	r24, 0x45	; 69
 42c:	38 f4       	brcc	.+14     	; 0x43c <DIO_vwrite_port+0x16>
 42e:	82 34       	cpi	r24, 0x42	; 66
 430:	99 f0       	breq	.+38     	; 0x458 <DIO_vwrite_port+0x32>
 432:	83 34       	cpi	r24, 0x43	; 67
 434:	98 f4       	brcc	.+38     	; 0x45c <DIO_vwrite_port+0x36>
 436:	81 34       	cpi	r24, 0x41	; 65
 438:	a1 f4       	brne	.+40     	; 0x462 <DIO_vwrite_port+0x3c>
 43a:	0c c0       	rjmp	.+24     	; 0x454 <DIO_vwrite_port+0x2e>
 43c:	82 36       	cpi	r24, 0x62	; 98
 43e:	61 f0       	breq	.+24     	; 0x458 <DIO_vwrite_port+0x32>
 440:	83 36       	cpi	r24, 0x63	; 99
 442:	18 f4       	brcc	.+6      	; 0x44a <DIO_vwrite_port+0x24>
 444:	81 36       	cpi	r24, 0x61	; 97
 446:	69 f4       	brne	.+26     	; 0x462 <DIO_vwrite_port+0x3c>
 448:	05 c0       	rjmp	.+10     	; 0x454 <DIO_vwrite_port+0x2e>
 44a:	83 36       	cpi	r24, 0x63	; 99
 44c:	39 f0       	breq	.+14     	; 0x45c <DIO_vwrite_port+0x36>
 44e:	84 36       	cpi	r24, 0x64	; 100
 450:	41 f4       	brne	.+16     	; 0x462 <DIO_vwrite_port+0x3c>
 452:	06 c0       	rjmp	.+12     	; 0x460 <DIO_vwrite_port+0x3a>
	{
		case 'A':
		case 'a':
		PORTA=val;
 454:	6b bb       	out	0x1b, r22	; 27
		break;
 456:	08 95       	ret
		case 'B':
		case 'b':
		PORTB=val;
 458:	68 bb       	out	0x18, r22	; 24
		break;
 45a:	08 95       	ret
		case 'C':
		case 'c':
		PORTC=val;
 45c:	65 bb       	out	0x15, r22	; 21
		break;
 45e:	08 95       	ret
		case 'D':
		case 'd':
		PORTD=val;
 460:	62 bb       	out	0x12, r22	; 18
 462:	08 95       	ret

00000464 <DIO_U8read_port>:
	}
}
unsigned char DIO_U8read_port(unsigned char port)
{
	int val;
	switch(port)
 464:	84 34       	cpi	r24, 0x44	; 68
 466:	d9 f0       	breq	.+54     	; 0x49e <DIO_U8read_port+0x3a>
 468:	85 34       	cpi	r24, 0x45	; 69
 46a:	38 f4       	brcc	.+14     	; 0x47a <DIO_U8read_port+0x16>
 46c:	82 34       	cpi	r24, 0x42	; 66
 46e:	99 f0       	breq	.+38     	; 0x496 <DIO_U8read_port+0x32>
 470:	83 34       	cpi	r24, 0x43	; 67
 472:	98 f4       	brcc	.+38     	; 0x49a <DIO_U8read_port+0x36>
 474:	81 34       	cpi	r24, 0x41	; 65
 476:	a1 f4       	brne	.+40     	; 0x4a0 <DIO_U8read_port+0x3c>
 478:	0c c0       	rjmp	.+24     	; 0x492 <DIO_U8read_port+0x2e>
 47a:	82 36       	cpi	r24, 0x62	; 98
 47c:	61 f0       	breq	.+24     	; 0x496 <DIO_U8read_port+0x32>
 47e:	83 36       	cpi	r24, 0x63	; 99
 480:	18 f4       	brcc	.+6      	; 0x488 <DIO_U8read_port+0x24>
 482:	81 36       	cpi	r24, 0x61	; 97
 484:	69 f4       	brne	.+26     	; 0x4a0 <DIO_U8read_port+0x3c>
 486:	05 c0       	rjmp	.+10     	; 0x492 <DIO_U8read_port+0x2e>
 488:	83 36       	cpi	r24, 0x63	; 99
 48a:	39 f0       	breq	.+14     	; 0x49a <DIO_U8read_port+0x36>
 48c:	84 36       	cpi	r24, 0x64	; 100
 48e:	41 f4       	brne	.+16     	; 0x4a0 <DIO_U8read_port+0x3c>
 490:	06 c0       	rjmp	.+12     	; 0x49e <DIO_U8read_port+0x3a>
	{
		case 'A':
		case 'a':
		PINA=val;
 492:	19 ba       	out	0x19, r1	; 25
		break;
 494:	08 95       	ret
		case 'B':
		case 'b':
		val=PINB;
 496:	86 b3       	in	r24, 0x16	; 22
		break;
 498:	08 95       	ret
		case 'C':
		case 'c':
		val=PINC;
 49a:	83 b3       	in	r24, 0x13	; 19
		break;
 49c:	08 95       	ret
		case 'D':
		case 'd':
		val=PIND;
 49e:	80 b3       	in	r24, 0x10	; 16
		break;
	}
}
 4a0:	08 95       	ret

000004a2 <DIO_vtog_port>:
void DIO_vtog_port(unsigned char port)
{
	switch(port)
 4a2:	84 34       	cpi	r24, 0x44	; 68
 4a4:	09 f1       	breq	.+66     	; 0x4e8 <DIO_vtog_port+0x46>
 4a6:	85 34       	cpi	r24, 0x45	; 69
 4a8:	38 f4       	brcc	.+14     	; 0x4b8 <DIO_vtog_port+0x16>
 4aa:	82 34       	cpi	r24, 0x42	; 66
 4ac:	a9 f0       	breq	.+42     	; 0x4d8 <DIO_vtog_port+0x36>
 4ae:	83 34       	cpi	r24, 0x43	; 67
 4b0:	b8 f4       	brcc	.+46     	; 0x4e0 <DIO_vtog_port+0x3e>
 4b2:	81 34       	cpi	r24, 0x41	; 65
 4b4:	e1 f4       	brne	.+56     	; 0x4ee <DIO_vtog_port+0x4c>
 4b6:	0c c0       	rjmp	.+24     	; 0x4d0 <DIO_vtog_port+0x2e>
 4b8:	82 36       	cpi	r24, 0x62	; 98
 4ba:	71 f0       	breq	.+28     	; 0x4d8 <DIO_vtog_port+0x36>
 4bc:	83 36       	cpi	r24, 0x63	; 99
 4be:	18 f4       	brcc	.+6      	; 0x4c6 <DIO_vtog_port+0x24>
 4c0:	81 36       	cpi	r24, 0x61	; 97
 4c2:	a9 f4       	brne	.+42     	; 0x4ee <DIO_vtog_port+0x4c>
 4c4:	05 c0       	rjmp	.+10     	; 0x4d0 <DIO_vtog_port+0x2e>
 4c6:	83 36       	cpi	r24, 0x63	; 99
 4c8:	59 f0       	breq	.+22     	; 0x4e0 <DIO_vtog_port+0x3e>
 4ca:	84 36       	cpi	r24, 0x64	; 100
 4cc:	81 f4       	brne	.+32     	; 0x4ee <DIO_vtog_port+0x4c>
 4ce:	0c c0       	rjmp	.+24     	; 0x4e8 <DIO_vtog_port+0x46>
	{
		case 'A':
		case 'a':
		PORTA=~PORTA;
 4d0:	8b b3       	in	r24, 0x1b	; 27
 4d2:	80 95       	com	r24
 4d4:	8b bb       	out	0x1b, r24	; 27
		break;
 4d6:	08 95       	ret
		case 'B':
		case 'b':
		PORTB=~PORTB;
 4d8:	88 b3       	in	r24, 0x18	; 24
 4da:	80 95       	com	r24
 4dc:	88 bb       	out	0x18, r24	; 24
		break;
 4de:	08 95       	ret
		case 'C':
		case 'c':
		PORTC=~PORTC;
 4e0:	85 b3       	in	r24, 0x15	; 21
 4e2:	80 95       	com	r24
 4e4:	85 bb       	out	0x15, r24	; 21
		break;
 4e6:	08 95       	ret
		case 'D':
		case 'd':
		PORTD=~PORTD;
 4e8:	82 b3       	in	r24, 0x12	; 18
 4ea:	80 95       	com	r24
 4ec:	82 bb       	out	0x12, r24	; 18
 4ee:	08 95       	ret

000004f0 <DIO_vcontrolpullup>:
		break;
	}
}
void DIO_vcontrolpullup(unsigned char port,unsigned char pin,unsigned char enable)
{
	switch(port)
 4f0:	84 34       	cpi	r24, 0x44	; 68
 4f2:	09 f4       	brne	.+2      	; 0x4f6 <DIO_vcontrolpullup+0x6>
 4f4:	71 c0       	rjmp	.+226    	; 0x5d8 <DIO_vcontrolpullup+0xe8>
 4f6:	85 34       	cpi	r24, 0x45	; 69
 4f8:	48 f4       	brcc	.+18     	; 0x50c <DIO_vcontrolpullup+0x1c>
 4fa:	82 34       	cpi	r24, 0x42	; 66
 4fc:	99 f1       	breq	.+102    	; 0x564 <DIO_vcontrolpullup+0x74>
 4fe:	83 34       	cpi	r24, 0x43	; 67
 500:	08 f0       	brcs	.+2      	; 0x504 <DIO_vcontrolpullup+0x14>
 502:	4d c0       	rjmp	.+154    	; 0x59e <DIO_vcontrolpullup+0xae>
 504:	81 34       	cpi	r24, 0x41	; 65
 506:	09 f0       	breq	.+2      	; 0x50a <DIO_vcontrolpullup+0x1a>
 508:	83 c0       	rjmp	.+262    	; 0x610 <DIO_vcontrolpullup+0x120>
 50a:	0f c0       	rjmp	.+30     	; 0x52a <DIO_vcontrolpullup+0x3a>
 50c:	82 36       	cpi	r24, 0x62	; 98
 50e:	51 f1       	breq	.+84     	; 0x564 <DIO_vcontrolpullup+0x74>
 510:	83 36       	cpi	r24, 0x63	; 99
 512:	20 f4       	brcc	.+8      	; 0x51c <DIO_vcontrolpullup+0x2c>
 514:	81 36       	cpi	r24, 0x61	; 97
 516:	09 f0       	breq	.+2      	; 0x51a <DIO_vcontrolpullup+0x2a>
 518:	7b c0       	rjmp	.+246    	; 0x610 <DIO_vcontrolpullup+0x120>
 51a:	07 c0       	rjmp	.+14     	; 0x52a <DIO_vcontrolpullup+0x3a>
 51c:	83 36       	cpi	r24, 0x63	; 99
 51e:	09 f4       	brne	.+2      	; 0x522 <DIO_vcontrolpullup+0x32>
 520:	3e c0       	rjmp	.+124    	; 0x59e <DIO_vcontrolpullup+0xae>
 522:	84 36       	cpi	r24, 0x64	; 100
 524:	09 f0       	breq	.+2      	; 0x528 <DIO_vcontrolpullup+0x38>
 526:	74 c0       	rjmp	.+232    	; 0x610 <DIO_vcontrolpullup+0x120>
 528:	57 c0       	rjmp	.+174    	; 0x5d8 <DIO_vcontrolpullup+0xe8>
	{
		case 'a':
		case 'A':
		if(enable==1)
 52a:	41 30       	cpi	r20, 0x01	; 1
 52c:	69 f4       	brne	.+26     	; 0x548 <DIO_vcontrolpullup+0x58>
		{
			SET_BIT(PORTA,pin);
 52e:	2b b3       	in	r18, 0x1b	; 27
 530:	81 e0       	ldi	r24, 0x01	; 1
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	ac 01       	movw	r20, r24
 536:	02 c0       	rjmp	.+4      	; 0x53c <DIO_vcontrolpullup+0x4c>
 538:	44 0f       	add	r20, r20
 53a:	55 1f       	adc	r21, r21
 53c:	6a 95       	dec	r22
 53e:	e2 f7       	brpl	.-8      	; 0x538 <DIO_vcontrolpullup+0x48>
 540:	ba 01       	movw	r22, r20
 542:	62 2b       	or	r22, r18
 544:	6b bb       	out	0x1b, r22	; 27
 546:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTA,pin);
 548:	2b b3       	in	r18, 0x1b	; 27
 54a:	81 e0       	ldi	r24, 0x01	; 1
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	ac 01       	movw	r20, r24
 550:	02 c0       	rjmp	.+4      	; 0x556 <DIO_vcontrolpullup+0x66>
 552:	44 0f       	add	r20, r20
 554:	55 1f       	adc	r21, r21
 556:	6a 95       	dec	r22
 558:	e2 f7       	brpl	.-8      	; 0x552 <DIO_vcontrolpullup+0x62>
 55a:	ba 01       	movw	r22, r20
 55c:	60 95       	com	r22
 55e:	62 23       	and	r22, r18
 560:	6b bb       	out	0x1b, r22	; 27
 562:	08 95       	ret
		}
		break;
		case 'b':
		case 'B':
		if(enable==1)
 564:	41 30       	cpi	r20, 0x01	; 1
 566:	69 f4       	brne	.+26     	; 0x582 <DIO_vcontrolpullup+0x92>
		{
			SET_BIT(PORTB,pin);
 568:	28 b3       	in	r18, 0x18	; 24
 56a:	81 e0       	ldi	r24, 0x01	; 1
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	ac 01       	movw	r20, r24
 570:	02 c0       	rjmp	.+4      	; 0x576 <DIO_vcontrolpullup+0x86>
 572:	44 0f       	add	r20, r20
 574:	55 1f       	adc	r21, r21
 576:	6a 95       	dec	r22
 578:	e2 f7       	brpl	.-8      	; 0x572 <DIO_vcontrolpullup+0x82>
 57a:	ba 01       	movw	r22, r20
 57c:	62 2b       	or	r22, r18
 57e:	68 bb       	out	0x18, r22	; 24
 580:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTB,pin);
 582:	28 b3       	in	r18, 0x18	; 24
 584:	81 e0       	ldi	r24, 0x01	; 1
 586:	90 e0       	ldi	r25, 0x00	; 0
 588:	ac 01       	movw	r20, r24
 58a:	02 c0       	rjmp	.+4      	; 0x590 <DIO_vcontrolpullup+0xa0>
 58c:	44 0f       	add	r20, r20
 58e:	55 1f       	adc	r21, r21
 590:	6a 95       	dec	r22
 592:	e2 f7       	brpl	.-8      	; 0x58c <DIO_vcontrolpullup+0x9c>
 594:	ba 01       	movw	r22, r20
 596:	60 95       	com	r22
 598:	62 23       	and	r22, r18
 59a:	68 bb       	out	0x18, r22	; 24
 59c:	08 95       	ret
		}
		break;
		case 'c':
		case 'C':
		if(enable==1)
 59e:	41 30       	cpi	r20, 0x01	; 1
 5a0:	69 f4       	brne	.+26     	; 0x5bc <DIO_vcontrolpullup+0xcc>
		{
			SET_BIT(PORTC,pin);
 5a2:	25 b3       	in	r18, 0x15	; 21
 5a4:	81 e0       	ldi	r24, 0x01	; 1
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	ac 01       	movw	r20, r24
 5aa:	02 c0       	rjmp	.+4      	; 0x5b0 <DIO_vcontrolpullup+0xc0>
 5ac:	44 0f       	add	r20, r20
 5ae:	55 1f       	adc	r21, r21
 5b0:	6a 95       	dec	r22
 5b2:	e2 f7       	brpl	.-8      	; 0x5ac <DIO_vcontrolpullup+0xbc>
 5b4:	ba 01       	movw	r22, r20
 5b6:	62 2b       	or	r22, r18
 5b8:	65 bb       	out	0x15, r22	; 21
 5ba:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTC,pin);
 5bc:	25 b3       	in	r18, 0x15	; 21
 5be:	81 e0       	ldi	r24, 0x01	; 1
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	ac 01       	movw	r20, r24
 5c4:	02 c0       	rjmp	.+4      	; 0x5ca <DIO_vcontrolpullup+0xda>
 5c6:	44 0f       	add	r20, r20
 5c8:	55 1f       	adc	r21, r21
 5ca:	6a 95       	dec	r22
 5cc:	e2 f7       	brpl	.-8      	; 0x5c6 <DIO_vcontrolpullup+0xd6>
 5ce:	ba 01       	movw	r22, r20
 5d0:	60 95       	com	r22
 5d2:	62 23       	and	r22, r18
 5d4:	65 bb       	out	0x15, r22	; 21
 5d6:	08 95       	ret
		}
		break;
		case 'd':
		case 'D':
		if(enable==1)
 5d8:	41 30       	cpi	r20, 0x01	; 1
 5da:	69 f4       	brne	.+26     	; 0x5f6 <DIO_vcontrolpullup+0x106>
		{
			SET_BIT(PORTD,pin);
 5dc:	22 b3       	in	r18, 0x12	; 18
 5de:	81 e0       	ldi	r24, 0x01	; 1
 5e0:	90 e0       	ldi	r25, 0x00	; 0
 5e2:	ac 01       	movw	r20, r24
 5e4:	02 c0       	rjmp	.+4      	; 0x5ea <DIO_vcontrolpullup+0xfa>
 5e6:	44 0f       	add	r20, r20
 5e8:	55 1f       	adc	r21, r21
 5ea:	6a 95       	dec	r22
 5ec:	e2 f7       	brpl	.-8      	; 0x5e6 <DIO_vcontrolpullup+0xf6>
 5ee:	ba 01       	movw	r22, r20
 5f0:	62 2b       	or	r22, r18
 5f2:	62 bb       	out	0x12, r22	; 18
 5f4:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTD,pin);
 5f6:	22 b3       	in	r18, 0x12	; 18
 5f8:	81 e0       	ldi	r24, 0x01	; 1
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	ac 01       	movw	r20, r24
 5fe:	02 c0       	rjmp	.+4      	; 0x604 <DIO_vcontrolpullup+0x114>
 600:	44 0f       	add	r20, r20
 602:	55 1f       	adc	r21, r21
 604:	6a 95       	dec	r22
 606:	e2 f7       	brpl	.-8      	; 0x600 <DIO_vcontrolpullup+0x110>
 608:	ba 01       	movw	r22, r20
 60a:	60 95       	com	r22
 60c:	62 23       	and	r22, r18
 60e:	62 bb       	out	0x12, r22	; 18
 610:	08 95       	ret

00000612 <LED_vinit>:
 *  Author: abdel
 */ 
#include "DIO_driver.h"
void LED_vinit(unsigned char port,unsigned char pin)
{
	DIO_vset_pindir(port,pin,1);
 612:	41 e0       	ldi	r20, 0x01	; 1
 614:	0e 94 66 00 	call	0xcc	; 0xcc <DIO_vset_pindir>
}
 618:	08 95       	ret

0000061a <LED_von>:
void LED_von(unsigned char port,unsigned char pin)
{
	DIO_vwrite_pin(port,pin,1);
 61a:	41 e0       	ldi	r20, 0x01	; 1
 61c:	0e 94 f7 00 	call	0x1ee	; 0x1ee <DIO_vwrite_pin>
}
 620:	08 95       	ret

00000622 <LED_voff>:
void LED_voff(unsigned char port,unsigned char pin)
{
	DIO_vwrite_pin(port,pin,0);
 622:	40 e0       	ldi	r20, 0x00	; 0
 624:	0e 94 f7 00 	call	0x1ee	; 0x1ee <DIO_vwrite_pin>
}
 628:	08 95       	ret

0000062a <LED_vtogg>:
void LED_vtogg(unsigned char port,unsigned char pin)
{
	DIO_vtoggle(port,pin);
 62a:	0e 94 a7 01 	call	0x34e	; 0x34e <DIO_vtoggle>
}
 62e:	08 95       	ret

00000630 <LED_u8readstatus>:
char LED_u8readstatus(unsigned char port,unsigned char pin)
{
	return DIO_U8read_pin(port,pin);
 630:	0e 94 88 01 	call	0x310	; 0x310 <DIO_U8read_pin>
 634:	08 95       	ret

00000636 <pushbutton_vinit>:
 *  Author: abdel
 */ 
#include "DIO_driver.h"
void pushbutton_vinit(unsigned char port,unsigned char pin)
{
	DIO_vset_pindir(port,pin,0);
 636:	40 e0       	ldi	r20, 0x00	; 0
 638:	0e 94 66 00 	call	0xcc	; 0xcc <DIO_vset_pindir>
}
 63c:	08 95       	ret

0000063e <pushbutton_u8read>:
char pushbutton_u8read(unsigned char port,unsigned char pin)
{
	unsigned char x;
	x=DIO_U8read_pin(port,pin);
 63e:	0e 94 88 01 	call	0x310	; 0x310 <DIO_U8read_pin>
	return x;
 642:	08 95       	ret

00000644 <_exit>:
 644:	f8 94       	cli

00000646 <__stop_program>:
 646:	ff cf       	rjmp	.-2      	; 0x646 <__stop_program>
